import{_ as t,c as p,e as l,a as n,b as e,d as i,r as o,o as r}from"./app-BSRiWrsC.js";const d={},c={href:"https://learn.microsoft.com/zh-cn/windows-server/administration/openssh/openssh_keymanagement",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.cnblogs.com/robinbin/p/16162608.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.jianshu.com/p/1ec72a019bd9",target:"_blank",rel:"noopener noreferrer"},v={href:"https://blog.csdn.net/Oxford1151/article/details/137228119",target:"_blank",rel:"noopener noreferrer"};function m(b,s){const a=o("ExternalLinkIcon");return r(),p("div",null,[s[6]||(s[6]=l(`<h2 id="windows开启ssh指南" tabindex="-1"><a class="header-anchor" href="#windows开启ssh指南"><span>Windows开启ssh指南</span></a></h2><h3 id="启用ssh" tabindex="-1"><a class="header-anchor" href="#启用ssh"><span>启用ssh</span></a></h3><p>在Windows系统设置<code>管理可选服务</code>中安装<code>ssh服务端</code>与<code>ssh客户端</code></p><p>确保ssh使用的是Windows官方的而不是git等自带的，由于一些系统命令不一样，这两种ssh客户端不可以当成一种来设置，请务必确保和我配置的是Windows服务中的ssh.exe</p><p>可以通过<code>get-command sshd</code>确认，如果不是，请把Windows的ssh的路径移动到环境变量比较靠上的地方</p><p>Powershell中启用sshd</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell" data-title="powershell"><pre><code><span class="line"><span class="token comment"># Start the sshd service</span></span>
<span class="line"><span class="token function">Start-Service</span> sshd</span>
<span class="line"><span class="token comment"># set sshd auto startup</span></span>
<span class="line"><span class="token function">Set-Service</span> <span class="token operator">-</span>Name sshd <span class="token operator">-</span>StartupType <span class="token string">&#39;Automatic&#39;</span></span>
<span class="line"><span class="token comment"># verify the filrewall rule</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token function">Get-NetFirewallRule</span> <span class="token operator">-</span>Name <span class="token string">&quot;OpenSSH-Server-In-TCP&quot;</span> <span class="token operator">-</span>ErrorAction SilentlyContinue <span class="token punctuation">|</span> <span class="token function">Select-Object</span> Name<span class="token punctuation">,</span> Enabled<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Write-Output</span> <span class="token string">&quot;Firewall Rule &#39;OpenSSH-Server-In-TCP&#39; does not exist, creating it...&quot;</span></span>
<span class="line">    <span class="token function">New-NetFirewallRule</span> <span class="token operator">-</span>Name <span class="token string">&#39;OpenSSH-Server-In-TCP&#39;</span> <span class="token operator">-</span>DisplayName <span class="token string">&#39;OpenSSH Server (sshd)&#39;</span> <span class="token operator">-</span>Enabled True <span class="token operator">-</span>Direction Inbound <span class="token operator">-</span>Protocol TCP <span class="token operator">-</span>Action Allow <span class="token operator">-</span>LocalPort 22</span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Write-Output</span> <span class="token string">&quot;Firewall rule &#39;OpenSSH-Server-In-TCP&#39; has been created and exists.&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后配置<code>C:\\ProgramData\\ssh\\sshd_config</code></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># 确保这几项没被注释</span>
<span class="line"># 允许以root用户登录</span>
<span class="line">PermitRootLogin yes</span>
<span class="line"># 允许使用公钥登录</span>
<span class="line">PubkeyAuthentication yes</span>
<span class="line"># 公钥保存文件路径</span>
<span class="line">AuthorizedKeysFile	.ssh/authorized_keys</span>
<span class="line"># 允许使用密码登录</span>
<span class="line">PasswordAuthentication yes</span>
<span class="line"># 允许使用空密码(可选)</span>
<span class="line">PermitEmptyPasswords yes</span>
<span class="line"></span>
<span class="line"># 确保这两项被注释了</span>
<span class="line">#Match Group administrators</span>
<span class="line">#       AuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每次修改完<code>sshd_config</code>都要重启服务</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell" data-title="powershell"><pre><code><span class="line"><span class="token function">Restart-Service</span> sshd</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>若需使用空密码，还需保证<code>本地安全策略</code>中<code>本地策略 </code> - <code>安全选项</code>的<code>账户：使用空密码的本地账户只允许进行控制台登录</code>一项是禁用状态</p><p>基本到这就可以在客户端的终端使用<code>ssh user@ip</code>然后输入密码连接。</p><p>为了方便，我们可以设置别名使用<code>ssh 别名</code>进行连接</p><p>配置<code>C:\\Users\\Administrator\\.ssh</code></p><div class="language-host line-numbers-mode" data-highlighter="prismjs" data-ext="host" data-title="host"><pre><code><span class="line">Host PC-LI4396 #别名</span>
<span class="line">	HostName 10.4.151.86 #IP</span>
<span class="line">	User Administrator #登录账户名</span>
<span class="line">	IdentityFile C:\\Users\\Administrator\\.ssh\\id_ecdsa #不使用公钥的话不需要这一行</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置密钥免密登录" tabindex="-1"><a class="header-anchor" href="#配置密钥免密登录"><span>配置密钥免密登录</span></a></h3>`,17)),n("p",null,[s[1]||(s[1]=e("参考：")),n("a",c,[s[0]||(s[0]=e("Windows 官方OpenSSH教程")),i(a)])]),s[7]||(s[7]=l(`<p>在客户端建立钥对</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell" data-title="powershell"><pre><code><span class="line">ssh-keygen <span class="token operator">-</span>t ecdsa</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可选<code>-c &#39;描述信息&#39;</code></p><p>最方便的是输入三次回车接受默认值</p><p>现在在<code>C:\\Users\\username/.ssh/</code>中有<code>id_ecdsa</code>（私钥）和<code>id_ecdsa.pub</code>（公钥）</p><p>可选：使用<code>ssh-agent</code>服务将密钥保存在Windows安全上下文中，不明文暴露在文件下。</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell" data-title="powershell"><pre><code><span class="line"><span class="token comment"># By default the ssh-agent service is disabled. Configure it to start automatically.</span></span>
<span class="line"><span class="token comment"># Make sure you&#39;re running as an Administrator.</span></span>
<span class="line"><span class="token function">Get-Service</span> ssh-agent <span class="token punctuation">|</span> <span class="token function">Set-Service</span> <span class="token operator">-</span>StartupType Automatic</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Start the service</span></span>
<span class="line"><span class="token function">Start-Service</span> ssh-agent</span>
<span class="line"></span>
<span class="line"><span class="token comment"># This should return a status of Running</span></span>
<span class="line"><span class="token function">Get-Service</span> ssh-agent</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Now load your key files into ssh-agent</span></span>
<span class="line">ssh-add <span class="token variable">$env</span>:USERPROFILE\\<span class="token punctuation">.</span>ssh\\id_ecdsa</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加之后备份好私钥文件就可以在本地删除它了。</p><p>开动脑瓜将<code>id_ecdsa.pub</code>中的内容加到服务端的<code>AuthorizedKeysFile</code>中，首次的话要自己在<code>./.ssh</code>文件夹中新建一个<code>authorized_keys</code>，同时注意这个文件的读写权限应限制为用户本人，不能有<code>Everyone</code>等出现。私钥的权限也一样要注意。</p><h3 id="结" tabindex="-1"><a class="header-anchor" href="#结"><span>结</span></a></h3><p>以上就是最简单的ssh配置和我配置ssh踩过的坑的避雷点，希望看到这篇的人都能一次通过，打开目录！</p>`,11)),n("p",null,[s[3]||(s[3]=e("如果还有其他问题，可能这些博客会有帮助： ")),n("a",u,[s[2]||(s[2]=e("【入门排坑】Windows之间使用OpenSSH的ssh免密登录，排坑")),i(a)])]),n("p",null,[n("a",h,[s[4]||(s[4]=e("【Windows】允许空密码连接Windows的OpenSSH Server")),i(a)])]),n("p",null,[n("a",v,[s[5]||(s[5]=e("vscode通过ssh连接服务器实现免密登录+删除（吐血总结）")),i(a)])])])}const g=t(d,[["render",m]]),w=JSON.parse('{"path":"/blogs/Config/ssh.html","title":"Windows中使用ssh遇到的问题","lang":"en-US","frontmatter":{"title":"Windows中使用ssh遇到的问题","date":"2024-12-20T00:00:00.000Z","tags":["ssh"],"categories":["Config"]},"headers":[{"level":2,"title":"Windows开启ssh指南","slug":"windows开启ssh指南","link":"#windows开启ssh指南","children":[{"level":3,"title":"启用ssh","slug":"启用ssh","link":"#启用ssh","children":[]},{"level":3,"title":"配置密钥免密登录","slug":"配置密钥免密登录","link":"#配置密钥免密登录","children":[]},{"level":3,"title":"结","slug":"结","link":"#结","children":[]}]}],"git":{"createdTime":1744420073000,"updatedTime":1744420073000,"contributors":[{"name":"NewLearner4396","email":"NewLearner4396@users.noreply.github.com","commits":1}]},"filePathRelative":"blogs/Config/ssh.md"}');export{g as comp,w as data};
