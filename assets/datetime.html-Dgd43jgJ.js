import{_ as e,c as p,e as o,a,b as s,d as i,r as l,o as c}from"./app-BSRiWrsC.js";const r={},d={href:"https://www.cnblogs.com/Jaryer/p/13814690.html",target:"_blank",rel:"noopener noreferrer"};function u(m,n){const t=l("ExternalLinkIcon");return c(),p("div",null,[n[2]||(n[2]=o(`<h2 id="datatime库" tabindex="-1"><a class="header-anchor" href="#datatime库"><span>Datatime库</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 获取一段时间的列表</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">get_date_list</span><span class="token punctuation">(</span>start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    date_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">    start_date <span class="token operator">=</span> dt<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>start_date<span class="token punctuation">,</span> <span class="token string">&#39;%Y-%m-%d&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    end_date <span class="token operator">=</span> dt<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>end_date<span class="token punctuation">,</span> <span class="token string">&#39;%Y-%m-%d&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    date_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>start_date<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y-%m-%d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">while</span> start_date <span class="token operator">&lt;</span> end_date<span class="token punctuation">:</span></span>
<span class="line">        start_date <span class="token operator">+=</span> dt<span class="token punctuation">.</span>timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        date_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>start_date<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y-%m-%d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> date_list</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),a("p",null,[n[1]||(n[1]=s("参考链接：")),a("a",d,[n[0]||(n[0]=s("python获取一段时间的日期")),i(t)])])])}const v=e(r,[["render",u]]),_=JSON.parse('{"path":"/blogs/Python/datetime.html","title":"Datetime库的学习笔记","lang":"en-US","frontmatter":{"title":"Datetime库的学习笔记","date":"2022-10-07T00:00:00.000Z","tags":["Python"],"categories":["Lang"]},"headers":[{"level":2,"title":"Datatime库","slug":"datatime库","link":"#datatime库","children":[]}],"git":{"createdTime":1744420073000,"updatedTime":1744420073000,"contributors":[{"name":"NewLearner4396","email":"NewLearner4396@users.noreply.github.com","commits":1}]},"filePathRelative":"blogs/Python/datetime.md"}');export{v as comp,_ as data};
