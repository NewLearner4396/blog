import{_ as c,c as l,e as p,a as n,b as a,d as e,r as o,o as i}from"./app-BSRiWrsC.js";const u={},m={href:"https://ieeexplore.ieee.org/document/6595533",target:"_blank",rel:"noopener noreferrer"},r={href:"https://ietresearch.onlinelibrary.wiley.com/doi/full/10.1049/iet-ipr.2017.0353",target:"_blank",rel:"noopener noreferrer"},k={href:"https://ieeexplore.ieee.org/document/889420",target:"_blank",rel:"noopener noreferrer"},d={href:"https://ieeexplore.ieee.org/document/7373325",target:"_blank",rel:"noopener noreferrer"};function x(v,s){const t=o("ExternalLinkIcon");return i(),l("div",null,[s[8]||(s[8]=p('<h2 id="基于最小化联合l2-1范数的非凸秩估计的红外小目标检测" tabindex="-1"><a class="header-anchor" href="#基于最小化联合l2-1范数的非凸秩估计的红外小目标检测"><span>基于最小化联合l2,1范数的非凸秩估计的红外小目标检测</span></a></h2><h3 id="ipi模型" tabindex="-1"><a class="header-anchor" href="#ipi模型"><span>IPI模型</span></a></h3><p><strong>IPI模型：</strong></p><p><img src="http://imagebed.krins.cloud/api/image/0064JB6X.png" alt="image-20221021155105726"></p><p>原图像D由背景B、目标T、噪声N组成。</p><p>IPI模型基于两个假设，<strong>背景图像是一个低秩矩阵，目标图像是一个稀疏矩阵</strong>。论文提到该假设较为符合物理实际，并且现在有很多高效的低秩矩阵恢复的方法，所以这个模型效率和泛用性极高。</p><p>该模型通过滑动窗将原图像进行提取，将得到的每个面片（Patch）拉伸成一维列向量，n个列向量组合成新的矩阵，即公式中的D。</p><p>T是一个稀疏矩阵，即<img src="http://imagebed.krins.cloud/api/image/806T6280.png" alt="image-20221021155358366"></p><p>T的非零元个数小于k，k远小于T矩阵的元素个数</p><p>B是一个低秩矩阵，即</p><p><img src="http://imagebed.krins.cloud/api/image/40Z08HFF.png" alt="image-20221021155706114"></p><p>r是一个常数，对于越高复杂度的背景，r越高。实验中，背景图像的奇异值总是迅速收敛到0，印证了该假设的正确性。</p><p>由于一张图像较远像素也往往有较高相关性，提取出的D通常可以使用现有的许多非局部自相似性的方法。</p><p>N假设为一个i.i.d(独立同分布白噪声)</p><p><img src="http://imagebed.krins.cloud/api/image/06T4R6L2.png" alt="image-20221021160520947"></p>',15)),s[9]||(s[9]=n("p",null,[a("在该模型中的k,r,"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D6FF TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"δ")])])]),a(",对不同图像不同，但好消息是我们不需要直接计算出这些值。")],-1)),s[10]||(s[10]=p('<p><strong>通过该模型小目标检测实际上是从数据矩阵中恢复低秩分量和稀疏分量的问题</strong></p><p>即：</p><p><img src="http://imagebed.krins.cloud/api/image/D4FPTXPP.png" alt="image-20221021161136496"></p><p>可转换为对应问题</p><p><img src="http://imagebed.krins.cloud/api/image/64BJL0H0.png" alt="image-20221021161216174"></p><p>因为该问题是一个凸问题，可以使用 Accelerated Proximal Gradient (APG)求解</p><p><img src="http://imagebed.krins.cloud/api/image/8H8FH222.png" alt="image-20221021161435605"></p><p>其中</p><p><img src="http://imagebed.krins.cloud/api/image/6B0LV62P.png" alt="image-20221021161459558"></p><p>该模型完整求解过程</p><p><img src="http://imagebed.krins.cloud/api/image/2NPDVH82.png" alt="image-20221021161712075"></p><p>首先，根据从图像序列获得的原始红外图像fD构建补丁图像D。 其次，将算法1应用于斑块图像D以同时估计低秩背景斑块图像B和稀疏目标斑块图像T。 第三，我们分别从补丁图像B和T重建背景图像fB和目标图像fT。 第四，我们使用一种简单的分割方法来自适应地分割目标图像fT，因为它包含一些小值的误差。最后，通过后处理，对分割结果进行细化，得到最终的检测结果。</p>',12)),s[11]||(s[11]=n("p",null,[a("在算法1中，选择"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D706 TEX-I"})]),n("mjx-mo",{class:"mjx-n",space:"4"},[n("mjx-c",{class:"mjx-c3D"})]),n("mjx-mn",{class:"mjx-n",space:"4"},[n("mjx-c",{class:"mjx-c31"})]),n("mjx-TeXAtom",{texclass:"ORD"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2F"})])]),n("mjx-TeXAtom",{texclass:"ORD"},[n("mjx-msqrt",null,[n("mjx-sqrt",null,[n("mjx-surd",null,[n("mjx-mo",{class:"mjx-sop"},[n("mjx-c",{class:"mjx-c221A TEX-S1"})])]),n("mjx-box",{style:{"padding-top":"0.107em"}},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D45A TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D44E TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D465 TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c28"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D45A TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2C"})]),n("mjx-mi",{class:"mjx-i",space:"2"},[n("mjx-c",{class:"mjx-c1D45B TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c29"})])])])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"λ"),n("mo",null,"="),n("mn",null,"1"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",null,"/")]),n("mrow",{"data-mjx-texclass":"ORD"},[n("msqrt",null,[n("mi",null,"m"),n("mi",null,"a"),n("mi",null,"x"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mo",null,","),n("mi",null,"n"),n("mo",{stretchy:"false"},")")])])])])]),a(", "),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D702 TEX-I"})]),n("mjx-mo",{class:"mjx-n",space:"4"},[n("mjx-c",{class:"mjx-c3D"})]),n("mjx-mn",{class:"mjx-n",space:"4"},[n("mjx-c",{class:"mjx-c30"}),n("mjx-c",{class:"mjx-c2E"}),n("mjx-c",{class:"mjx-c39"}),n("mjx-c",{class:"mjx-c39"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"η"),n("mo",null,"="),n("mn",null,"0.99")])])]),a(", "),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-msub",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D707 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"-0.15em"}},[n("mjx-mn",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c30"})])])]),n("mjx-mo",{class:"mjx-n",space:"4"},[n("mjx-c",{class:"mjx-c3D"})]),n("mjx-msub",{space:"4"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D460 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"-0.15em"}},[n("mjx-mn",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c32"})])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msub",null,[n("mi",null,"μ"),n("mn",null,"0")]),n("mo",null,"="),n("msub",null,[n("mi",null,"s"),n("mn",null,"2")])])])]),a(", "),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-TeXAtom",{texclass:"ORD"},[n("mjx-mover",null,[n("mjx-over",{style:{"padding-bottom":"0.105em","padding-left":"0.329em","margin-bottom":"-0.544em"}},[n("mjx-mo",{class:"mjx-n",style:{width:"0","margin-left":"-0.25em"}},[n("mjx-c",{class:"mjx-cAF"})])]),n("mjx-base",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D707 TEX-I"})])])])]),n("mjx-mo",{class:"mjx-n",space:"4"},[n("mjx-c",{class:"mjx-c3D"})]),n("mjx-mn",{class:"mjx-n",space:"4"},[n("mjx-c",{class:"mjx-c30"}),n("mjx-c",{class:"mjx-c2E"}),n("mjx-c",{class:"mjx-c30"}),n("mjx-c",{class:"mjx-c35"})]),n("mjx-msub",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D460 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"-0.15em"}},[n("mjx-mn",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c34"})])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mrow",{"data-mjx-texclass":"ORD"},[n("mover",null,[n("mi",null,"μ"),n("mo",{stretchy:"false"},"¯")])]),n("mo",null,"="),n("mn",null,"0.05"),n("msub",null,[n("mi",null,"s"),n("mn",null,"4")])])])]),a(", "),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-msub",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D460 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"-0.15em"}},[n("mjx-mn",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c32"})])])]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2C"})]),n("mjx-msub",{space:"2"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D460 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"-0.15em"}},[n("mjx-mn",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c34"})])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msub",null,[n("mi",null,"s"),n("mn",null,"2")]),n("mo",null,","),n("msub",null,[n("mi",null,"s"),n("mn",null,"4")])])])]),a("是D的第二和第四奇异值。")],-1)),s[12]||(s[12]=n("p",null,"第三步中重叠部分的像素使用中值滤波器，比均值滤波器鲁棒性更好。",-1)),s[13]||(s[13]=n("p",null,"第四步中设置阈值确定目标：",-1)),s[14]||(s[14]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/86DV6F60.png",alt:"image-20221021162522338"})],-1)),s[15]||(s[15]=n("p",null,"可按需要选择双边阈值：",-1)),s[16]||(s[16]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/X82Z046T.png",alt:""})],-1)),s[17]||(s[17]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/48TL2TT0.png",alt:"image-20221021162600732"})],-1)),s[18]||(s[18]=n("p",null,[n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-msub",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D463 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"-0.15em"}},[n("mjx-TeXAtom",{size:"s",texclass:"ORD"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D45A TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D44E TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D465 TEX-I"})])])])]),n("mjx-TeXAtom",{texclass:"ORD"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-utext",{style:{"font-family":"MJXZERO, serif"},variant:"normal"},"、")])]),n("mjx-msub",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D463 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"-0.15em"}},[n("mjx-TeXAtom",{size:"s",texclass:"ORD"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D45A TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D456 TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D45B TEX-I"})])])])]),n("mjx-TeXAtom",{texclass:"ORD"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-utext",{style:{"font-family":"MJXZERO, serif"},variant:"normal"},"、")])]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D458 TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msub",null,[n("mi",null,"v"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"m"),n("mi",null,"a"),n("mi",null,"x")])]),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",null,"、")]),n("msub",null,[n("mi",null,"v"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"m"),n("mi",null,"i"),n("mi",null,"n")])]),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",null,"、")]),n("mi",null,"k")])])]),a("为经验确定的常数，"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D707 TEX-I"})]),n("mjx-TeXAtom",{texclass:"ORD"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-utext",{style:{"font-family":"MJXZERO, serif"},variant:"normal"},"、")])]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D70E TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"μ"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",null,"、")]),n("mi",null,"σ")])])]),a("为"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-msub",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D453 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"-0.15em","margin-left":"-0.06em"}},[n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D447 TEX-I"})])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msub",null,[n("mi",null,"f"),n("mi",null,"T")])])])]),a("的均值和标准差")],-1)),s[19]||(s[19]=n("p",null,"最后一步的后处理中可使用区域分析方法去删除错误检测目标，可使用形态学方法去提炼目标区域。并且使用统计技术估计目标在重建背景图像中的对应局部区域的复杂度，然后利用估计结果评估器可靠性。",-1)),n("p",null,[s[1]||(s[1]=a("参考链接：")),n("a",m,[s[0]||(s[0]=a("Infrared Patch-Image Model for Small Target Detection in a Single Image")),e(t)])]),s[20]||(s[20]=p('<p>然而由于核范数和1范数平等对待所有奇异值，算出来的秩与真秩有些许偏差，所以迭代结果可能只是局部最优解，也就是说，不能精确分离复杂图像的背景和目标。</p><p>后人通过 non-convex rank approximation 来改进 principal component analysis（PCA），同时新提出的 alternating direction method of multipliers（ADMM）比 accelerated proximal gradient（APG）收敛更快更精确，可以进一步优化算法。</p><h3 id="rewipi模型" tabindex="-1"><a class="header-anchor" href="#rewipi模型"><span>ReWIPI模型</span></a></h3><p>传统IPI模型由于l1范数不能完全描述稀疏性的缺陷，会过于缩小小目标或在目标图像中留下背景成分。并且由于强边缘也有可能是稀疏的，无法简单地与小目标进行区分。</p><p>通过结合结构先验信息，为每个patch自适应权重，提出了名为加权IPI weighted IPI（WIPI）的方法，然而每个patch都要进行计算，十分费时。并且仅能分离某些特定类型的强边缘。</p><p>WIPI的作者分析，其性能不令人满意的原因是<strong>缺少相似的边缘样本</strong>。虽然在奇异值部分和最小化partial sum minimisation of singular values（PSSV）方法的帮助下，可以保留较大的奇异值。然而，该方法仍需准确估计目标的秩，这实际上很难实现。</p><p>而且现有的基于低秩的方法没有考虑到亮度较低的非目标稀疏点的存在，很容易误认成为目标。</p><p>进一步分析，基于强边缘是否属于核范数最小化假设的相似边缘样本，可以将强边缘划分为强势的强边缘与弱势的强边缘。这两种强边缘都是全局稀疏的，但是只有弱势的强边缘是面片patch之间仍具有稀疏性。通过最后分离的结果来看，只有弱势的强边缘留在了目标图像中，也就是说，<strong>面片之间的稀疏性比面片内部的稀疏性更容易使得目标留在目标图像</strong>。所以<strong>IPI模型性能不足的真实原因是存在具有面片间稀疏性的弱势强边缘同小目标进行混淆</strong>。</p><p>所以我们急需一种方法可以抑制目标图像中的非目标稀疏点的同时保持背景强边缘。</p><p>基于<strong>加权核范数最小化weighted nuclear norm minimisation (WNNM)可以通过较小的权重惩罚较大的奇异值</strong>的特点，可以用来得到更为准确的背景图像。并且此方法并不需要准确计算出背景图像的秩。还可以<strong>使用加权l1范数weighted l1 norm，通过较大的权重惩罚非目标图像</strong>，得到更为准确的目标图像。根据这两种想法，可以提出一种新的IPI模型，reweighted IPI。</p><p>加权核范数定义为：</p><p><img src="http://imagebed.krins.cloud/api/image/8LN42FFX.png" alt="image-20221023224745792"></p><p>加权1范数定义为：</p><p><img src="http://imagebed.krins.cloud/api/image/0JJXD446.png" alt="image-20221023224902789"></p><p>对于噪声图像，我们假设其符合高斯分布，所以有：</p><p><img src="http://imagebed.krins.cloud/api/image/JBN2DJRX.png" alt="image-20221023225118819"></p><p>于是ReWIPI可表示成：</p><p><img src="http://imagebed.krins.cloud/api/image/6J820686.png" alt="image-20221023225151555"></p><p>该问题可以用拉格朗日乘子法等多种方法求解，见下文</p>',19)),n("p",null,[s[3]||(s[3]=a("参考：")),n("a",r,[s[2]||(s[2]=a("Small target detection based on reweighted infrared patch-image model")),e(t)])]),s[21]||(s[21]=n("h3",{id:"robust-pca-via-nonconvex-rank-approximation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#robust-pca-via-nonconvex-rank-approximation"},[n("span",null,"Robust PCA via Nonconvex Rank Approximation")])],-1)),s[22]||(s[22]=n("p",null,"主成分分析principal component analysis(PCA)是一种很好的将原始高维数据投影到低维空间的降维技术。然而，一旦存在一个严重偏离实际的数据，PCA的结果将会不尽人意。",-1)),s[23]||(s[23]=n("p",null,"为了增强对异常值或观测时损坏的数据的鲁棒性，我们需要一种算法进行Robust PCA（RPCA），并尽可能保证算法复杂度较低。",-1)),s[24]||(s[24]=n("p",null,"通常来说，问题可以建模成：",-1)),s[25]||(s[25]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/DHXD20H4.png",alt:"image-20221021191620601"})],-1)),s[26]||(s[26]=n("p",null,"找到实际低秩矩阵的秩和实际稀疏矩阵的非零元个数，也就是最小化所认定为低秩矩阵的秩以及所认定的稀疏矩阵的非零元个数。",-1)),s[27]||(s[27]=n("p",null,"以上问题是一个NP-Hard问题。但可以通过将非凸的秩函数放松成核函数，将l0范数放松成l1范数进行简化成凸函数:",-1)),s[28]||(s[28]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/NDXR46LB.png",alt:"image-20221023141809913"})],-1)),n("p",null,[s[5]||(s[5]=a("在不相干假设下，低秩矩阵和稀疏分量可以以压倒性的概率准确恢复。参考：")),n("a",k,[s[4]||(s[4]=a("Robust principal component analysis?")),e(t)])]),s[29]||(s[29]=n("p",null,"遇到的问题：",-1)),s[30]||(s[30]=n("ol",null,[n("li",null,"不是所有矩阵都能有一致性保证（满足不相干假设），数据可能会严重损坏，这样求出的最优解会明显偏离真值。"),n("li",null,"核函数本质上是矩阵奇异值的l1范数，然而l1范数本身就有收缩效应，这会导致得到的估计是有偏的。也就是说，RPCA将所有奇异值平均加权实际上过度惩罚了大的奇异值，导致结果偏离了较多。")],-1)),s[31]||(s[31]=n("p",null,"虽然我们可以利用对l1范数的非凸惩罚，如截断的l1范数进行修正。但是这些方法只适用于特殊场景。",-1)),s[32]||(s[32]=n("p",null,"于是提出利用一种新的非凸函数进行对秩的逼近，通过增强的拉格朗日乘子法 Augmented Lagrange Multiplier (ALM) 求解此非凸函数。",-1)),s[33]||(s[33]=n("p",null,[a("定义的新"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D6FE TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"γ")])])]),a("范数:")],-1)),s[34]||(s[34]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/V2BJ0R6X.png",alt:"image-20221023143918447"})],-1)),s[35]||(s[35]=n("p",null,"问题变成:",-1)),s[36]||(s[36]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/08J6Z680.png",alt:"image-20221023154909795"})],-1)),s[37]||(s[37]=n("p",null,"ALM：",-1)),s[38]||(s[38]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/N0TB40JN.png",alt:"image-20221023153952105"})],-1)),s[39]||(s[39]=n("p",null,[a("Y是拉格朗日乘子，用于消除等式约束，"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D707 TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"μ")])])]),a("是一个正参数，用来稍加约束误差，引入Frobenius 范数计算误差作为二次惩罚项。<·, ·>是两个矩阵的内积，也可以表示成"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D461 TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D45F TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c28"})]),n("mjx-msup",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D434 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"0.363em"}},[n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D447 TEX-I"})])])]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D435 TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c29"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"t"),n("mi",null,"r"),n("mo",{stretchy:"false"},"("),n("msup",null,[n("mi",null,"A"),n("mi",null,"T")]),n("mi",null,"B"),n("mo",{stretchy:"false"},")")])])]),a(".")],-1)),s[40]||(s[40]=n("p",null,[a("通过以下方程更新L，Y，"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D707 TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"μ")])])]),a("直至收敛：")],-1)),s[41]||(s[41]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/2ZFBB4X6.png",alt:"image-20221023154604521"})],-1)),s[42]||(s[42]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/468L062N.png",alt:"image-20221023155545407"})],-1)),s[43]||(s[43]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/060H42Z2.png",alt:"image-20221023155507969"})],-1)),s[44]||(s[44]=n("p",null,"L的迭代求解：",-1)),s[45]||(s[45]=n("p",null,[a("因为对于优化问题："),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-munder",null,[n("mjx-row",null,[n("mjx-base",null,[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c6D"}),n("mjx-c",{class:"mjx-c69"}),n("mjx-c",{class:"mjx-c6E"})])])]),n("mjx-row",null,[n("mjx-under",{style:{"padding-top":"0.167em","padding-left":"0.578em"}},[n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D44D TEX-I"})])])])]),n("mjx-mi",{class:"mjx-i",space:"2"},[n("mjx-c",{class:"mjx-c1D439 TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c28"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D44D TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c29"})]),n("mjx-mo",{class:"mjx-n",space:"3"},[n("mjx-c",{class:"mjx-c2B"})]),n("mjx-mfrac",{space:"3"},[n("mjx-frac",null,[n("mjx-num",null,[n("mjx-nstrut"),n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D707 TEX-I"})])]),n("mjx-dbox",null,[n("mjx-dtable",null,[n("mjx-line"),n("mjx-row",null,[n("mjx-den",null,[n("mjx-dstrut"),n("mjx-mn",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c32"})])])])])])])]),n("mjx-TeXAtom",{texclass:"ORD"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c7C"})])]),n("mjx-TeXAtom",{texclass:"ORD"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c7C"})])]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D44D TEX-I"})]),n("mjx-mo",{class:"mjx-n",space:"3"},[n("mjx-c",{class:"mjx-c2212"})]),n("mjx-mi",{class:"mjx-i",space:"3"},[n("mjx-c",{class:"mjx-c1D434 TEX-I"})]),n("mjx-TeXAtom",{texclass:"ORD"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c7C"})])]),n("mjx-msubsup",null,[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c7C"})]),n("mjx-script",{style:{"vertical-align":"-0.298em","margin-left":"0"}},[n("mjx-mn",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c32"})]),n("mjx-spacer",{style:{"margin-top":"0.18em"}}),n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D439 TEX-I"})])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("munder",null,[n("mo",{"data-mjx-texclass":"OP"},"min"),n("mi",null,"Z")]),n("mi",null,"F"),n("mo",{stretchy:"false"},"("),n("mi",null,"Z"),n("mo",{stretchy:"false"},")"),n("mo",null,"+"),n("mfrac",null,[n("mi",null,"μ"),n("mn",null,"2")]),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"|")]),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"|")]),n("mi",null,"Z"),n("mo",null,"−"),n("mi",null,"A"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"|")]),n("msubsup",null,[n("mo",{stretchy:"false"},"|"),n("mi",null,"F"),n("mn",null,"2")])])])]),a("的最优解"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-msup",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D44D TEX-I"})]),n("mjx-script",{style:{"vertical-align":"0.363em","margin-left":"0.052em"}},[n("mjx-mo",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c2217"})])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msup",null,[n("mi",null,"Z"),n("mo",null,"∗")])])])]),a("可SVD成"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D448 TEX-I"})]),n("mjx-munderover",{space:"2",limits:"false"},[n("mjx-mo",{class:"mjx-sop"},[n("mjx-c",{class:"mjx-c2211 TEX-S1"})]),n("mjx-script",{style:{"vertical-align":"-0.285em","margin-left":"0"}},[n("mjx-mo",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c2217"})]),n("mjx-spacer",{style:{"margin-top":"0.304em"}}),n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D44D TEX-I"})])])]),n("mjx-msup",{space:"2"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D449 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"0.363em","margin-left":"0.059em"}},[n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D447 TEX-I"})])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"U"),n("munderover",null,[n("mo",{"data-mjx-texclass":"OP"},"∑"),n("mi",null,"Z"),n("mo",null,"∗")]),n("msup",null,[n("mi",null,"V"),n("mi",null,"T")])])])]),a(","),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-munderover",{limits:"false"},[n("mjx-mo",{class:"mjx-sop"},[n("mjx-c",{class:"mjx-c2211 TEX-S1"})]),n("mjx-script",{style:{"vertical-align":"-0.285em","margin-left":"0"}},[n("mjx-mo",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c2217"})]),n("mjx-spacer",{style:{"margin-top":"0.304em"}}),n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D44D TEX-I"})])])]),n("mjx-mo",{class:"mjx-n",space:"4"},[n("mjx-c",{class:"mjx-c3D"})]),n("mjx-mi",{class:"mjx-i",space:"4"},[n("mjx-c",{class:"mjx-c1D451 TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D456 TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D44E TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D454 TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c28"})]),n("mjx-msup",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D70E TEX-I"})]),n("mjx-script",{style:{"vertical-align":"0.363em"}},[n("mjx-mo",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c2217"})])])]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c29"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("munderover",null,[n("mo",{"data-mjx-texclass":"OP"},"∑"),n("mi",null,"Z"),n("mo",null,"∗")]),n("mo",null,"="),n("mi",null,"d"),n("mi",null,"i"),n("mi",null,"a"),n("mi",null,"g"),n("mo",{stretchy:"false"},"("),n("msup",null,[n("mi",null,"σ"),n("mo",null,"∗")]),n("mo",{stretchy:"false"},")")])])]),a(","),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D70E TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2217"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"σ"),n("mo",null,"∗")])])]),a("是优化问题"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D44E TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D45F TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D454 TEX-I"})]),n("mjx-munder",{space:"2"},[n("mjx-row",null,[n("mjx-base",null,[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c6D"}),n("mjx-c",{class:"mjx-c69"}),n("mjx-c",{class:"mjx-c6E"})])])]),n("mjx-row",null,[n("mjx-under",{style:{"padding-top":"0.167em","padding-left":"0.18em"}},[n("mjx-TeXAtom",{size:"s",texclass:"ORD"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D70E TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2265"})]),n("mjx-mn",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c30"})])])])])]),n("mjx-mi",{class:"mjx-i",space:"2"},[n("mjx-c",{class:"mjx-c1D453 TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c28"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D70E TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c29"})]),n("mjx-mo",{class:"mjx-n",space:"3"},[n("mjx-c",{class:"mjx-c2B"})]),n("mjx-mfrac",{space:"3"},[n("mjx-frac",null,[n("mjx-num",null,[n("mjx-nstrut"),n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D707 TEX-I"})])]),n("mjx-dbox",null,[n("mjx-dtable",null,[n("mjx-line"),n("mjx-row",null,[n("mjx-den",null,[n("mjx-dstrut"),n("mjx-mn",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c32"})])])])])])])]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2016"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D70E TEX-I"})]),n("mjx-mo",{class:"mjx-n",space:"3"},[n("mjx-c",{class:"mjx-c2212"})]),n("mjx-msub",{space:"3"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D70E TEX-I"})]),n("mjx-script",{style:{"vertical-align":"-0.153em"}},[n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D434 TEX-I"})])])]),n("mjx-msubsup",null,[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2016"})]),n("mjx-script",{style:{"vertical-align":"-0.298em","margin-left":"0"}},[n("mjx-mn",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c32"})]),n("mjx-spacer",{style:{"margin-top":"0.18em"}}),n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D439 TEX-I"})])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"g"),n("munder",null,[n("mo",{"data-mjx-texclass":"OP"},"min"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"σ"),n("mo",null,"≥"),n("mn",null,"0")])]),n("mi",null,"f"),n("mo",{stretchy:"false"},"("),n("mi",null,"σ"),n("mo",{stretchy:"false"},")"),n("mo",null,"+"),n("mfrac",null,[n("mi",null,"μ"),n("mn",null,"2")]),n("mo",{"data-mjx-texclass":"ORD",fence:"false",stretchy:"false"},"‖"),n("mi",null,"σ"),n("mo",null,"−"),n("msub",null,[n("mi",null,"σ"),n("mi",null,"A")]),n("msubsup",null,[n("mo",{"data-mjx-texclass":"ORD",fence:"false",stretchy:"false"},"‖"),n("mi",null,"F"),n("mn",null,"2")])])])]),a("的最优解。")],-1)),s[46]||(s[46]=n("p",null,"而上述问题又是凹函数和凸函数的联合，可以用差分凸规划 difference of convex (DC) programing迭代优化,直至收敛：",-1)),s[47]||(s[47]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/T60HN6F8.png",alt:"image-20221023164609814"})],-1)),s[48]||(s[48]=n("p",null,[a("其中"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-msub",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D464 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"-0.15em"}},[n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D458 TEX-I"})])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msub",null,[n("mi",null,"w"),n("mi",null,"k")])])])]),a("是"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D453 TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c28"})]),n("mjx-msub",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D70E TEX-I"})]),n("mjx-script",{style:{"vertical-align":"-0.15em"}},[n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D458 TEX-I"})])])]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c29"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"f"),n("mo",{stretchy:"false"},"("),n("msub",null,[n("mi",null,"σ"),n("mi",null,"k")]),n("mo",{stretchy:"false"},")")])])]),a("的梯度")],-1)),s[49]||(s[49]=n("p",null,[a("最后"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-msup",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D43F TEX-I"})]),n("mjx-script",{style:{"vertical-align":"0.363em"}},[n("mjx-TeXAtom",{size:"s",texclass:"ORD"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D461 TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2B"})]),n("mjx-mn",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c31"})])])])]),n("mjx-mo",{class:"mjx-n",space:"4"},[n("mjx-c",{class:"mjx-c3D"})]),n("mjx-mi",{class:"mjx-i",space:"4"},[n("mjx-c",{class:"mjx-c1D448 TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D451 TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D456 TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D44E TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D454 TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c28"})]),n("mjx-msup",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D70E TEX-I"})]),n("mjx-script",{style:{"vertical-align":"0.363em"}},[n("mjx-mo",{class:"mjx-n",size:"s"},[n("mjx-c",{class:"mjx-c2217"})])])]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c29"})]),n("mjx-msup",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D449 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"0.363em","margin-left":"0.059em"}},[n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D447 TEX-I"})])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msup",null,[n("mi",null,"L"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"t"),n("mo",null,"+"),n("mn",null,"1")])]),n("mo",null,"="),n("mi",null,"U"),n("mi",null,"d"),n("mi",null,"i"),n("mi",null,"a"),n("mi",null,"g"),n("mo",{stretchy:"false"},"("),n("msup",null,[n("mi",null,"σ"),n("mo",null,"∗")]),n("mo",{stretchy:"false"},")"),n("msup",null,[n("mi",null,"V"),n("mi",null,"T")])])])])],-1)),s[50]||(s[50]=n("p",null,"S的迭代求解：",-1)),s[51]||(s[51]=n("p",null,"若方程13用的是S的联合2,1范数，则解可以表示成：",-1)),s[52]||(s[52]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/88X4XNVB.png",alt:"image-20221023155840951"})],-1)),s[53]||(s[53]=n("p",null,[a("其中："),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D444 TEX-I"})]),n("mjx-mo",{class:"mjx-n",space:"4"},[n("mjx-c",{class:"mjx-c3D"})]),n("mjx-mi",{class:"mjx-i",space:"4"},[n("mjx-c",{class:"mjx-c1D44B TEX-I"})]),n("mjx-mo",{class:"mjx-n",space:"3"},[n("mjx-c",{class:"mjx-c2212"})]),n("mjx-msup",{space:"3"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D43F TEX-I"})]),n("mjx-script",{style:{"vertical-align":"0.363em"}},[n("mjx-TeXAtom",{size:"s",texclass:"ORD"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D461 TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2B"})]),n("mjx-mn",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c31"})])])])]),n("mjx-mo",{class:"mjx-n",space:"3"},[n("mjx-c",{class:"mjx-c2212"})]),n("mjx-mfrac",{space:"3"},[n("mjx-frac",null,[n("mjx-num",null,[n("mjx-nstrut"),n("mjx-msup",{size:"s"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D44C TEX-I"})]),n("mjx-script",{style:{"vertical-align":"0.363em","margin-left":"0.059em"}},[n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D461 TEX-I"})])])])]),n("mjx-dbox",null,[n("mjx-dtable",null,[n("mjx-line"),n("mjx-row",null,[n("mjx-den",null,[n("mjx-dstrut"),n("mjx-msup",{size:"s"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D707 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"0.289em"}},[n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D461 TEX-I"})])])])])])])])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"Q"),n("mo",null,"="),n("mi",null,"X"),n("mo",null,"−"),n("msup",null,[n("mi",null,"L"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"t"),n("mo",null,"+"),n("mn",null,"1")])]),n("mo",null,"−"),n("mfrac",null,[n("msup",null,[n("mi",null,"Y"),n("mi",null,"t")]),n("msup",null,[n("mi",null,"μ"),n("mi",null,"t")])])])])]),a(","),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c5B"})]),n("mjx-msup",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D446 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"0.363em","margin-left":"0.052em"}},[n("mjx-TeXAtom",{size:"s",texclass:"ORD"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D461 TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2B"})]),n("mjx-mn",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c31"})])])])]),n("mjx-msub",null,[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c5D"})]),n("mjx-script",{style:{"vertical-align":"-0.15em"}},[n("mjx-TeXAtom",{size:"s",texclass:"ORD"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c3A"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2C"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D456 TEX-I"})])])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mo",{stretchy:"false"},"["),n("msup",null,[n("mi",null,"S"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"t"),n("mo",null,"+"),n("mn",null,"1")])]),n("msub",null,[n("mo",{stretchy:"false"},"]"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",null,":"),n("mo",null,","),n("mi",null,"i")])])])])]),a(" 是"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-msup",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D446 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"0.363em","margin-left":"0.052em"}},[n("mjx-TeXAtom",{size:"s",texclass:"ORD"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D461 TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2B"})]),n("mjx-mn",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c31"})])])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msup",null,[n("mi",null,"S"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"t"),n("mo",null,"+"),n("mn",null,"1")])])])])]),a("的第i列,"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c7C"})]),n("mjx-TeXAtom",{texclass:"ORD"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c7C"})])]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D446 TEX-I"})]),n("mjx-TeXAtom",{texclass:"ORD"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c7C"})])]),n("mjx-msub",null,[n("mjx-TeXAtom",{texclass:"ORD"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c7C"})])]),n("mjx-script",{style:{"vertical-align":"-0.15em"}},[n("mjx-TeXAtom",{size:"s",texclass:"ORD"},[n("mjx-mn",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c32"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2C"})]),n("mjx-mn",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c31"})])])])]),n("mjx-mo",{class:"mjx-n",space:"4"},[n("mjx-c",{class:"mjx-c3D"})]),n("mjx-munder",{space:"4"},[n("mjx-row",null,[n("mjx-base",null,[n("mjx-mo",{class:"mjx-sop"},[n("mjx-c",{class:"mjx-c2211 TEX-S1"})])])]),n("mjx-row",null,[n("mjx-under",{style:{"padding-top":"0.167em","padding-left":"0.406em"}},[n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D456 TEX-I"})])])])]),n("mjx-msqrt",{space:"2"},[n("mjx-sqrt",null,[n("mjx-surd",null,[n("mjx-mo",{class:"mjx-s3"},[n("mjx-c",{class:"mjx-c221A TEX-S3"})])]),n("mjx-box",{style:{"padding-top":"0.231em"}},[n("mjx-munder",null,[n("mjx-row",null,[n("mjx-base",null,[n("mjx-mo",{class:"mjx-sop"},[n("mjx-c",{class:"mjx-c2211 TEX-S1"})])])]),n("mjx-row",null,[n("mjx-under",{style:{"padding-top":"0.167em","padding-left":"0.382em"}},[n("mjx-mi",{class:"mjx-i",size:"s"},[n("mjx-c",{class:"mjx-c1D457 TEX-I"})])])])]),n("mjx-TeXAtom",{space:"2",texclass:"ORD"},[n("mjx-msubsup",null,[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D446 TEX-I"})]),n("mjx-script",{style:{"vertical-align":"-0.294em","margin-left":"-0.032em"}},[n("mjx-mn",{class:"mjx-n",size:"s",style:{"margin-left":"0.118em"}},[n("mjx-c",{class:"mjx-c32"})]),n("mjx-spacer",{style:{"margin-top":"0.18em"}}),n("mjx-TeXAtom",{size:"s",texclass:"ORD"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D456 TEX-I"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D457 TEX-I"})])])])])])])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mo",{stretchy:"false"},"|"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"|")]),n("mi",null,"S"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"|")]),n("msub",null,[n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"|")]),n("mrow",{"data-mjx-texclass":"ORD"},[n("mn",null,"2"),n("mo",null,","),n("mn",null,"1")])]),n("mo",null,"="),n("munder",null,[n("mo",{"data-mjx-texclass":"OP",movablelimits:"false"},"∑"),n("mi",null,"i")]),n("msqrt",null,[n("munder",null,[n("mo",{"data-mjx-texclass":"OP",movablelimits:"false"},"∑"),n("mi",null,"j")]),n("mrow",{"data-mjx-texclass":"ORD"},[n("msubsup",null,[n("mi",null,"S"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"i"),n("mi",null,"j")]),n("mn",null,"2")])])])])])])],-1)),s[54]||(s[54]=n("p",null,"若用的S的1范数，则解可以表示成：",-1)),s[55]||(s[55]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/R026BD62.png",alt:"image-20221023160452582"})],-1)),s[56]||(s[56]=n("p",null,"参数设置",-1)),s[57]||(s[57]=n("ol",null,[n("li",null,[n("p",null,[n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D706 TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"λ")])])])]),n("p",null,[n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D706 TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"λ")])])]),a("太大会导致S迭代成0，最后L仍为一个高秩矩阵，"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D706 TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"λ")])])]),a("太小会导致L最后为0，可以将"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D706 TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"λ")])])]),a("设置成"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mn",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c31"})]),n("mjx-TeXAtom",{texclass:"ORD"},[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2F"})])]),n("mjx-msqrt",null,[n("mjx-sqrt",null,[n("mjx-surd",null,[n("mjx-mo",{class:"mjx-sop"},[n("mjx-c",{class:"mjx-c221A TEX-S1"})])]),n("mjx-box",{style:{"padding-top":"0.107em"}},[n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c6D"}),n("mjx-c",{class:"mjx-c61"}),n("mjx-c",{class:"mjx-c78"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c28"})]),n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D45A TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c2C"})]),n("mjx-mi",{class:"mjx-i",space:"2"},[n("mjx-c",{class:"mjx-c1D45B TEX-I"})]),n("mjx-mo",{class:"mjx-n"},[n("mjx-c",{class:"mjx-c29"})])])])])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mn",null,"1"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",null,"/")]),n("msqrt",null,[n("mo",{"data-mjx-texclass":"OP",movablelimits:"true"},"max"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mo",null,","),n("mi",null,"n"),n("mo",{stretchy:"false"},")")])])])]),a("邻域的任意值，实验证明"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D706 TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"λ")])])]),a("在相当范围内不敏感，可以设置成10e-3")])]),n("li",null,[n("p",null,[n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D70C TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"ρ")])])])]),n("p",null,[n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D70C TEX-I"})]),n("mjx-mo",{class:"mjx-n",space:"4"},[n("mjx-c",{class:"mjx-c3E"})]),n("mjx-mn",{class:"mjx-n",space:"4"},[n("mjx-c",{class:"mjx-c31"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"ρ"),n("mo",null,">"),n("mn",null,"1")])])]),a("，若"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D70C TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"ρ")])])]),a("较大，则收敛更快，若"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D70C TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"ρ")])])]),a("较小，则结果更精确。通常取1.1。")])]),n("li",null,[n("p",null,[n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D707 TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"μ")])])])]),n("p",null,"可分别取1e-4，3e-3，0.5,4进行实验确定效果")])],-1)),n("p",null,[s[7]||(s[7]=a("参考论文：")),n("a",d,[s[6]||(s[6]=a("Robust PCA via Nonconvex Rank Approximation")),e(t)])]),s[58]||(s[58]=p('<hr><p><strong>根据以上工作，提出以下方法</strong></p><h3 id="infrared-small-target-detection-via-non-convex-rank-approximation-minimization-joint-l2-1-norm" tabindex="-1"><a class="header-anchor" href="#infrared-small-target-detection-via-non-convex-rank-approximation-minimization-joint-l2-1-norm"><span>Infrared Small Target Detection via Non-Convex Rank Approximation Minimization Joint l2,1 Norm</span></a></h3><h4 id="算法原理" tabindex="-1"><a class="header-anchor" href="#算法原理"><span>算法原理</span></a></h4><p><img src="http://imagebed.krins.cloud/api/image/X08D4268.png" alt="image-20221017140935731"></p>',5)),s[59]||(s[59]=n("p",null,[a("引用一种 "),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D6FE TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"γ")])])]),a(" norm")],-1)),s[60]||(s[60]=n("p",null,[n("img",{src:"http://imagebed.krins.cloud/api/image/40PPTD8R.png",alt:"image-20221017140923454"})],-1)),s[61]||(s[61]=n("p",null,[n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D6FE TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"γ")])])]),a("趋近0是B的秩，趋于无穷是B的核范数。")],-1)),s[62]||(s[62]=n("p",null,[a("显然，"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D6FE TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"γ")])])]),a("范数几乎与真秩一致（此处使用"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D6FE TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"γ")])])]),a("=0.002），解决了传统凸核范数中不同奇异值的不平衡惩罚")],-1)),s[63]||(s[63]=n("p",null,[a("weighted nuclear norm（WNN）的逼近效果也很好，但每次都要重新计算权重时都要重新进行奇异值分解，增加了计算量。总体性能并不能比上"),n("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[n("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[n("mjx-mi",{class:"mjx-i"},[n("mjx-c",{class:"mjx-c1D6FE TEX-I"})])]),n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"γ")])])]),a("范数。")],-1)),s[64]||(s[64]=p(`<p><img src="http://imagebed.krins.cloud/api/image/PB26X848.png" alt="image-20221021174453131"></p><p>加权1范数</p><p><img src="http://imagebed.krins.cloud/api/image/N88B22XN.png" alt="image-20221017140951106"></p><p>复杂背景下的强边缘会在目标图像中留下残余。为了解决这个问题，并考虑到目标图像中留下的强边缘相对于整个图像来说是线性结构的稀疏性，我们引入了联合2,1范数来有效地去除强边缘</p><p>联合2,1范数</p><p><img src="http://imagebed.krins.cloud/api/image/HRXDPZBJ.png" alt="image-20221017141000213"></p><p>于是目标问题就变成</p><p><img src="http://imagebed.krins.cloud/api/image/6HRHLPL0.png" alt="image-20221017141013452"></p><p>引入拉格朗日乘子项和二次惩罚项将问题简化</p><p><img src="http://imagebed.krins.cloud/api/image/2TZD6JJ6.png" alt="image-20221017141130929"></p><p>问题进一步转换成一下子问题：</p><p><img src="http://imagebed.krins.cloud/api/image/NBL84BZ4.png" alt="image-20221017141240575"></p><p>可以通过最小化加权核范数逐渐求得B</p><p><img src="http://imagebed.krins.cloud/api/image/J80604LV.png" alt="image-20221017142344020"></p><p>对于联合2,1范数，T的迭代解可以表示成：</p><p><img src="http://imagebed.krins.cloud/api/image/D2P4R0XB.png" alt="image-20221017142409602"></p><p><img src="http://imagebed.krins.cloud/api/image/62LRL06Z.png" alt="image-20221017142434618"></p><p><img src="http://imagebed.krins.cloud/api/image/JH62J6NJ.png" alt="image-20221017142445556"></p><p><img src="http://imagebed.krins.cloud/api/image/BRB820H0.png" alt="image-20221017142456163"></p><p>算法流程如下：</p><p><img src="http://imagebed.krins.cloud/api/image/PT6NRBNL.png" alt="image-20221017173929903"></p><p><img src="http://imagebed.krins.cloud/api/image/2PHH66D2.png" alt="image-20221017173939217"></p><h4 id="对应matlab代码" tabindex="-1"><a class="header-anchor" href="#对应matlab代码"><span>对应matlab代码</span></a></h4><div class="language-matlab line-numbers-mode" data-highlighter="prismjs" data-ext="matlab" data-title="matlab"><pre><code><span class="line"><span class="token comment">% 主程序</span></span>
<span class="line">clc<span class="token punctuation">;</span>clear<span class="token punctuation">;</span></span>
<span class="line">close all<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">addpath</span><span class="token punctuation">(</span><span class="token string">&#39;functions/&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">addpath</span><span class="token punctuation">(</span><span class="token string">&#39;tools/&#39;</span><span class="token punctuation">)</span></span>
<span class="line">saveDir <span class="token operator">=</span> <span class="token string">&#39;results/&#39;</span><span class="token punctuation">;</span></span>
<span class="line">imgpath <span class="token operator">=</span> <span class="token string">&#39;images/&#39;</span><span class="token punctuation">;</span></span>
<span class="line">imgDir <span class="token operator">=</span> <span class="token function">dir</span><span class="token punctuation">(</span><span class="token punctuation">[</span>imgpath <span class="token string">&#39;*.bmp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">% patch parameters</span></span>
<span class="line">patchSize <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span></span>
<span class="line">slideStep <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span></span>
<span class="line">lambdaL <span class="token operator">=</span> <span class="token number">0.7</span><span class="token punctuation">;</span>  <span class="token comment">%tuning</span></span>
<span class="line"></span>
<span class="line">len <span class="token operator">=</span> <span class="token function">length</span><span class="token punctuation">(</span>imgDir<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">% for i=1:len</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>len</span>
<span class="line">    img <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token punctuation">[</span>imgpath <span class="token function">imgDir</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    figure<span class="token punctuation">,</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">131</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">imshow</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&#39;Original image&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token function">ndims</span><span class="token punctuation">(</span> img <span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span></span>
<span class="line">        img <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span> img <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line">    img <span class="token operator">=</span> <span class="token function">double</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">%% constrcut patch tensor of original image</span></span>
<span class="line">    tenD <span class="token operator">=</span> <span class="token function">gen_patch_ten</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> patchSize<span class="token punctuation">,</span> slideStep<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">[</span>n1<span class="token punctuation">,</span>n2<span class="token punctuation">,</span>n3<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>tenD<span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">    </span>
<span class="line">    <span class="token comment">%% calculate prior weight map</span></span>
<span class="line">    <span class="token comment">%      step 1: calculate two eigenvalues from structure tensor</span></span>
<span class="line">    <span class="token punctuation">[</span>lambda1<span class="token punctuation">,</span> lambda2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">structure_tensor_lambda</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">%      step 2: calculate corner strength function</span></span>
<span class="line">    cornerStrength <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>lambda1<span class="token operator">.*</span>lambda2<span class="token punctuation">)</span><span class="token operator">./</span><span class="token punctuation">(</span>lambda1 <span class="token operator">+</span> lambda2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">%      step 3: obtain final weight map</span></span>
<span class="line">    maxValue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">max</span><span class="token punctuation">(</span>lambda1<span class="token punctuation">,</span>lambda2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    priorWeight <span class="token operator">=</span> <span class="token function">mat2gray</span><span class="token punctuation">(</span>cornerStrength <span class="token operator">.*</span> maxValue<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">%      step 4: constrcut patch tensor of weight map</span></span>
<span class="line">    tenW <span class="token operator">=</span> <span class="token function">gen_patch_ten</span><span class="token punctuation">(</span>priorWeight<span class="token punctuation">,</span> patchSize<span class="token punctuation">,</span> slideStep<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">%% The proposed model</span></span>
<span class="line">    lambda <span class="token operator">=</span> lambdaL <span class="token operator">/</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">max</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span>n2<span class="token punctuation">)</span><span class="token operator">*</span>n3<span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line">    <span class="token punctuation">[</span>tenB<span class="token punctuation">,</span>tenT<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">trpca_pstnn</span><span class="token punctuation">(</span>tenD<span class="token punctuation">,</span>lambda<span class="token punctuation">,</span>tenW<span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line">    </span>
<span class="line">    <span class="token comment">%% recover the target and background image</span></span>
<span class="line">    tarImg <span class="token operator">=</span> <span class="token function">res_patch_ten_mean</span><span class="token punctuation">(</span>tenT<span class="token punctuation">,</span> img<span class="token punctuation">,</span> patchSize<span class="token punctuation">,</span> slideStep<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    backImg <span class="token operator">=</span> <span class="token function">res_patch_ten_mean</span><span class="token punctuation">(</span>tenB<span class="token punctuation">,</span> img<span class="token punctuation">,</span> patchSize<span class="token punctuation">,</span> slideStep<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    maxv <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">double</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    E <span class="token operator">=</span> <span class="token function">uint8</span><span class="token punctuation">(</span> <span class="token function">mat2gray</span><span class="token punctuation">(</span>tarImg<span class="token punctuation">)</span><span class="token operator">*</span>maxv <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    A <span class="token operator">=</span> <span class="token function">uint8</span><span class="token punctuation">(</span> <span class="token function">mat2gray</span><span class="token punctuation">(</span>backImg<span class="token punctuation">)</span><span class="token operator">*</span>maxv <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">132</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>E<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&#39;Target image&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">133</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&#39;Background image&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">% save the results</span></span>
<span class="line">    <span class="token function">imwrite</span><span class="token punctuation">(</span>E<span class="token punctuation">,</span> <span class="token punctuation">[</span>saveDir <span class="token string">&#39;target/&#39;</span> <span class="token function">imgDir</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">imwrite</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> <span class="token punctuation">[</span>saveDir <span class="token string">&#39;background/&#39;</span> <span class="token function">imgDir</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">% 滑动窗提取Patch</span></span>
<span class="line"><span class="token keyword">function</span> patchTen <span class="token operator">=</span> <span class="token function">gen_patch_ten</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> patchSize<span class="token punctuation">,</span> slideStep<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">% 2017-07-31</span></span>
<span class="line"><span class="token comment">% This matlab code implements the RIPT model for infrared target-background </span></span>
<span class="line"><span class="token comment">% separation.</span></span>
<span class="line">%</span>
<span class="line"><span class="token comment">% Yimian Dai. Questions? yimian.dai@gmail.com</span></span>
<span class="line"><span class="token comment">% Copyright: College of Electronic and Information Engineering, </span></span>
<span class="line"><span class="token comment">%            Nanjing University of Aeronautics and Astronautics</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token operator">~</span><span class="token function">exist</span><span class="token punctuation">(</span><span class="token string">&#39;patchSize&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;var&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    patchSize <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token operator">~</span><span class="token function">exist</span><span class="token punctuation">(</span><span class="token string">&#39;slideStep&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;var&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    slideStep <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">% img = reshape(1:9, [3 3])</span></span>
<span class="line"><span class="token comment">% img = reshape(1:12, [3 4])</span></span>
<span class="line"><span class="token comment">% patchSize = 2;</span></span>
<span class="line"><span class="token comment">% slideStep = 1;</span></span>
<span class="line"><span class="token punctuation">[</span>imgHei<span class="token punctuation">,</span> imgWid<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">rowPatchNum <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">(</span>imgHei <span class="token operator">-</span> patchSize<span class="token punctuation">)</span> <span class="token operator">/</span> slideStep<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">colPatchNum <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">(</span>imgWid <span class="token operator">-</span> patchSize<span class="token punctuation">)</span> <span class="token operator">/</span> slideStep<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">rowPosArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">:</span> slideStep <span class="token operator">:</span> <span class="token punctuation">(</span>rowPatchNum <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> slideStep<span class="token punctuation">,</span> imgHei <span class="token operator">-</span> patchSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">colPosArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">:</span> slideStep <span class="token operator">:</span> <span class="token punctuation">(</span>colPatchNum <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> slideStep<span class="token punctuation">,</span> imgWid <span class="token operator">-</span> patchSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">%% arrayfun version, identical to the following for-loop version</span></span>
<span class="line"><span class="token punctuation">[</span>meshCols<span class="token punctuation">,</span> meshRows<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">meshgrid</span><span class="token punctuation">(</span>colPosArr<span class="token punctuation">,</span> rowPosArr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">idx_fun <span class="token operator">=</span> <span class="token operator">@</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span> <span class="token function">img</span><span class="token punctuation">(</span>row <span class="token operator">:</span> row <span class="token operator">+</span> patchSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> col <span class="token operator">:</span> col <span class="token operator">+</span> patchSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">patchCell <span class="token operator">=</span> <span class="token function">arrayfun</span><span class="token punctuation">(</span>idx_fun<span class="token punctuation">,</span> meshRows<span class="token punctuation">,</span> meshCols<span class="token punctuation">,</span> <span class="token string">&#39;UniformOutput&#39;</span><span class="token punctuation">,</span> false<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">patchTen <span class="token operator">=</span> <span class="token function">cat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> patchCell<span class="token punctuation">{</span><span class="token operator">:</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">%% for-loop version</span></span>
<span class="line"><span class="token comment">% patchTen = zeros(patchSize, patchSize, rowPatchNum * colPatchNum);</span></span>
<span class="line"><span class="token comment">% k = 0;</span></span>
<span class="line"><span class="token comment">% for col = colPosArr</span></span>
<span class="line"><span class="token comment">%     for row = rowPosArr</span></span>
<span class="line"><span class="token comment">%         k = k + 1;</span></span>
<span class="line"><span class="token comment">%         tmp_patch = img(row : row + patchSize - 1, col : col + patchSize - 1);</span></span>
<span class="line"><span class="token comment">%         patchTen(:, :, k) = tmp_patch;</span></span>
<span class="line"><span class="token comment">%     end</span></span>
<span class="line"><span class="token comment">% end</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">% 计算结构化张量的特征值</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token punctuation">[</span>lambda_1<span class="token punctuation">,</span> lambda_2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">structure_tensor_lambda</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> sz<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">G <span class="token operator">=</span> <span class="token function">fspecial</span><span class="token punctuation">(</span><span class="token string">&#39;gaussian&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>sz sz<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% Gaussian kernel</span></span>
<span class="line">u <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> G<span class="token punctuation">,</span> <span class="token string">&#39;symmetric&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">[</span>Gx<span class="token punctuation">,</span> Gy<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">gradient</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">K <span class="token operator">=</span> <span class="token function">fspecial</span><span class="token punctuation">(</span><span class="token string">&#39;gaussian&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>sz sz<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% Gaussian kernel</span></span>
<span class="line">J_11 <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>Gx<span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">,</span> K<span class="token punctuation">,</span> <span class="token string">&#39;symmetric&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line">J_12 <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>Gx<span class="token operator">.*</span>Gy<span class="token punctuation">,</span> K<span class="token punctuation">,</span> <span class="token string">&#39;symmetric&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">J_21 <span class="token operator">=</span> J_12<span class="token punctuation">;</span></span>
<span class="line">J_22 <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>Gy<span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">,</span> K<span class="token punctuation">,</span> <span class="token string">&#39;symmetric&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   </span>
<span class="line"></span>
<span class="line">sqrt_delta <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>J_11 <span class="token operator">-</span> J_22<span class="token punctuation">)</span><span class="token operator">.^</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token operator">*</span>J_12<span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">lambda_1 <span class="token operator">=</span> <span class="token number">0.5</span><span class="token operator">*</span><span class="token punctuation">(</span>J_11 <span class="token operator">+</span> J_22 <span class="token operator">+</span> sqrt_delta<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">lambda_2 <span class="token operator">=</span> <span class="token number">0.5</span><span class="token operator">*</span><span class="token punctuation">(</span>J_11 <span class="token operator">+</span> J_22 <span class="token operator">-</span> sqrt_delta<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">% 计算目标和背景</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token punctuation">[</span>L<span class="token punctuation">,</span>S<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">trpca_pstnn</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> lambda<span class="token punctuation">,</span> tenW<span class="token punctuation">,</span> opts<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">tol <span class="token operator">=</span> <span class="token number">1e-3</span><span class="token punctuation">;</span> </span>
<span class="line">max_iter <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span></span>
<span class="line">rho <span class="token operator">=</span> <span class="token number">1.05</span><span class="token punctuation">;</span></span>
<span class="line">mu <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span><span class="token number">1e-3</span><span class="token punctuation">;</span></span>
<span class="line">max_mu <span class="token operator">=</span> <span class="token number">1e10</span><span class="token punctuation">;</span></span>
<span class="line">DEBUG <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">N <span class="token operator">=</span> <span class="token function">rankN</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token operator">~</span><span class="token function">exist</span><span class="token punctuation">(</span><span class="token string">&#39;opts&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;var&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    opts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">end</span>    </span>
<span class="line"><span class="token keyword">if</span> <span class="token function">isfield</span><span class="token punctuation">(</span>opts<span class="token punctuation">,</span> <span class="token string">&#39;tol&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         tol <span class="token operator">=</span> opts<span class="token punctuation">.</span>tol<span class="token punctuation">;</span>              <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token function">isfield</span><span class="token punctuation">(</span>opts<span class="token punctuation">,</span> <span class="token string">&#39;max_iter&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    max_iter <span class="token operator">=</span> opts<span class="token punctuation">.</span>max_iter<span class="token punctuation">;</span>    <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token function">isfield</span><span class="token punctuation">(</span>opts<span class="token punctuation">,</span> <span class="token string">&#39;rho&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         rho <span class="token operator">=</span> opts<span class="token punctuation">.</span>rho<span class="token punctuation">;</span>              <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token function">isfield</span><span class="token punctuation">(</span>opts<span class="token punctuation">,</span> <span class="token string">&#39;mu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          mu <span class="token operator">=</span> opts<span class="token punctuation">.</span>mu<span class="token punctuation">;</span>                <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token function">isfield</span><span class="token punctuation">(</span>opts<span class="token punctuation">,</span> <span class="token string">&#39;max_mu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      max_mu <span class="token operator">=</span> opts<span class="token punctuation">.</span>max_mu<span class="token punctuation">;</span>        <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token function">isfield</span><span class="token punctuation">(</span>opts<span class="token punctuation">,</span> <span class="token string">&#39;DEBUG&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       DEBUG <span class="token operator">=</span> opts<span class="token punctuation">.</span>DEBUG<span class="token punctuation">;</span>          <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token function">isfield</span><span class="token punctuation">(</span>opts<span class="token punctuation">,</span> <span class="token string">&#39;N&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           N <span class="token operator">=</span> opts<span class="token punctuation">.</span>N<span class="token punctuation">;</span>                  <span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line">dim <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">L <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>dim<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">S <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>dim<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">Y <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>dim<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">weightTen <span class="token operator">=</span> <span class="token function">ones</span><span class="token punctuation">(</span>dim<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> iter <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">:</span> max_iter</span>
<span class="line">    </span>
<span class="line">    preT <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">S</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">% update L</span></span>
<span class="line">    R <span class="token operator">=</span> <span class="token operator">-</span>S<span class="token operator">+</span>X<span class="token operator">-</span>Y<span class="token operator">/</span>mu<span class="token punctuation">;</span></span>
<span class="line">    L <span class="token operator">=</span> <span class="token function">prox_pstnn</span><span class="token punctuation">(</span>R<span class="token punctuation">,</span>N<span class="token punctuation">,</span>mu<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">% update S</span></span>
<span class="line">    T <span class="token operator">=</span> <span class="token operator">-</span>L<span class="token operator">+</span>X<span class="token operator">-</span>Y<span class="token operator">/</span>mu<span class="token punctuation">;</span></span>
<span class="line">    S <span class="token operator">=</span> <span class="token function">prox_l1</span><span class="token punctuation">(</span>T<span class="token punctuation">,</span> weightTen<span class="token operator">*</span>lambda<span class="token operator">/</span>mu<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span>
<span class="line">    weightTen <span class="token operator">=</span> N<span class="token operator">./</span> <span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0.01</span><span class="token punctuation">)</span><span class="token operator">./</span>tenW<span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">    dY <span class="token operator">=</span> L<span class="token operator">+</span>S<span class="token operator">-</span>X<span class="token punctuation">;</span></span>
<span class="line">    err <span class="token operator">=</span> <span class="token function">norm</span><span class="token punctuation">(</span><span class="token function">dY</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token function">X</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> DEBUG</span>
<span class="line">        <span class="token keyword">if</span> iter <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token function">mod</span><span class="token punctuation">(</span>iter<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>            </span>
<span class="line">            <span class="token function">disp</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;iter &#39;</span> <span class="token function">num2str</span><span class="token punctuation">(</span>iter<span class="token punctuation">)</span> <span class="token string">&#39;, mu=&#39;</span> <span class="token function">num2str</span><span class="token punctuation">(</span>mu<span class="token punctuation">)</span> <span class="token punctuation">...</span></span>
<span class="line">                   <span class="token string">&#39;, err=&#39;</span> <span class="token function">num2str</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">...</span></span>
<span class="line">                    <span class="token string">&#39;,|T|0 = &#39;</span> <span class="token function">num2str</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">S</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line">        <span class="token keyword">end</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line">    currT <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">S</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">&lt;</span> tol <span class="token operator">||</span> <span class="token punctuation">(</span>preT<span class="token operator">&gt;</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> currT<span class="token operator">&gt;</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> preT <span class="token operator">==</span> currT<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">end</span> </span>
<span class="line">    Y <span class="token operator">=</span> Y <span class="token operator">+</span> dY<span class="token operator">*</span>mu<span class="token punctuation">;</span></span>
<span class="line">    mu <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>rho<span class="token operator">*</span>mu<span class="token punctuation">,</span>max_mu<span class="token punctuation">)</span><span class="token punctuation">;</span>    </span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">% 估计矩阵的秩</span></span>
<span class="line"><span class="token keyword">function</span> N <span class="token operator">=</span> <span class="token function">rankN</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> ratioN<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span><span class="token operator">~</span><span class="token punctuation">,</span>n3<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    D <span class="token operator">=</span> <span class="token function">Unfold</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span>n3<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span> S<span class="token punctuation">,</span> <span class="token operator">~</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">svd</span><span class="token punctuation">(</span>D<span class="token punctuation">,</span> <span class="token string">&#39;econ&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">[</span>desS<span class="token punctuation">,</span> <span class="token operator">~</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token function">diag</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;descend&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    ratioVec <span class="token operator">=</span> desS <span class="token operator">/</span> <span class="token function">desS</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    idxArr <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>ratioVec <span class="token operator">&lt;</span> ratioN<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token function">idxArr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span></span>
<span class="line">        N <span class="token operator">=</span> <span class="token function">idxArr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">else</span></span>
<span class="line">        N <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line">    </span>
<span class="line">    </span>
<span class="line"><span class="token comment">% 核范数的优化</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token punctuation">[</span>X<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">prox_pstnn</span><span class="token punctuation">(</span>Y<span class="token punctuation">,</span>N<span class="token punctuation">,</span>mu<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span>n1<span class="token punctuation">,</span>n2<span class="token punctuation">,</span>n3<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">X <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span>n2<span class="token punctuation">,</span>n3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">Y <span class="token operator">=</span> <span class="token function">fft</span><span class="token punctuation">(</span>Y<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">tau <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span>mu<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">% first frontal slice</span></span>
<span class="line"><span class="token punctuation">[</span>U<span class="token punctuation">,</span>S<span class="token punctuation">,</span>V<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">svd</span><span class="token punctuation">(</span><span class="token function">Y</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;econ&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">diagS <span class="token operator">=</span> <span class="token function">diag</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">[</span>desS<span class="token punctuation">,</span> sIdx<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sort</span><span class="token punctuation">(</span>diagS<span class="token punctuation">,</span> <span class="token string">&#39;descend&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">[</span>desU<span class="token punctuation">,</span> desV<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deal</span><span class="token punctuation">(</span><span class="token function">U</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> sIdx<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">V</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> sIdx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">[</span>U1<span class="token punctuation">,</span> diagS1<span class="token punctuation">,</span> V1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deal</span><span class="token punctuation">(</span><span class="token function">desU</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span>N<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">desS</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span>N<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">desV</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span>N<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">[</span>U2<span class="token punctuation">,</span> diagS2<span class="token punctuation">,</span> V2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deal</span><span class="token punctuation">(</span><span class="token function">desU</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> N<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">desS</span><span class="token punctuation">(</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">desV</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> N<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span>
<span class="line">threshS2 <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>diagS2<span class="token operator">-</span>tau<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span>
<span class="line"><span class="token function">X</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> U1<span class="token operator">*</span><span class="token function">diag</span><span class="token punctuation">(</span>diagS1<span class="token punctuation">)</span><span class="token operator">*</span>V1<span class="token operator">&#39;</span> <span class="token operator">+</span> U2<span class="token operator">*</span><span class="token function">diag</span><span class="token punctuation">(</span>threshS2<span class="token punctuation">)</span><span class="token operator">*</span>V2<span class="token operator">&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">% i=2,...,halfn3</span></span>
<span class="line">halfn3 <span class="token operator">=</span> <span class="token function">round</span><span class="token punctuation">(</span>n3<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">:</span> halfn3</span>
<span class="line">    <span class="token punctuation">[</span>U<span class="token punctuation">,</span>S<span class="token punctuation">,</span>V<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">svd</span><span class="token punctuation">(</span><span class="token function">Y</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;econ&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    diagS <span class="token operator">=</span> <span class="token function">diag</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">[</span>desS<span class="token punctuation">,</span> sIdx<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sort</span><span class="token punctuation">(</span>diagS<span class="token punctuation">,</span> <span class="token string">&#39;descend&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">[</span>desU<span class="token punctuation">,</span> desV<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deal</span><span class="token punctuation">(</span><span class="token function">U</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> sIdx<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">V</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> sIdx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">[</span>U1<span class="token punctuation">,</span> diagS1<span class="token punctuation">,</span> V1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deal</span><span class="token punctuation">(</span><span class="token function">desU</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span>N<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">desS</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span>N<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">desV</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span>N<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">[</span>U2<span class="token punctuation">,</span> diagS2<span class="token punctuation">,</span> V2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deal</span><span class="token punctuation">(</span><span class="token function">desU</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> N<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">desS</span><span class="token punctuation">(</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">desV</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> N<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span>
<span class="line">    threshS2 <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>diagS2<span class="token operator">-</span>tau<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span>
<span class="line">    <span class="token function">X</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> U1<span class="token operator">*</span><span class="token function">diag</span><span class="token punctuation">(</span>diagS1<span class="token punctuation">)</span><span class="token operator">*</span>V1<span class="token operator">&#39;</span> <span class="token operator">+</span> U2<span class="token operator">*</span><span class="token function">diag</span><span class="token punctuation">(</span>threshS2<span class="token punctuation">)</span><span class="token operator">*</span>V2<span class="token operator">&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">X</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span>n3<span class="token operator">+</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">conj</span><span class="token punctuation">(</span><span class="token function">X</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line">  </span>
<span class="line"><span class="token comment">% if n3 is even</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token function">mod</span><span class="token punctuation">(</span>n3<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span></span>
<span class="line">    <span class="token number">i</span> <span class="token operator">=</span> halfn3<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">[</span>U<span class="token punctuation">,</span>S<span class="token punctuation">,</span>V<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">svd</span><span class="token punctuation">(</span><span class="token function">Y</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;econ&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    diagS <span class="token operator">=</span> <span class="token function">diag</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">[</span>desS<span class="token punctuation">,</span> sIdx<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sort</span><span class="token punctuation">(</span>diagS<span class="token punctuation">,</span> <span class="token string">&#39;descend&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">[</span>desU<span class="token punctuation">,</span> desV<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deal</span><span class="token punctuation">(</span><span class="token function">U</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> sIdx<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">V</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> sIdx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">[</span>U1<span class="token punctuation">,</span> diagS1<span class="token punctuation">,</span> V1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deal</span><span class="token punctuation">(</span><span class="token function">desU</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span>N<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">desS</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span>N<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">desV</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span>N<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">[</span>U2<span class="token punctuation">,</span> diagS2<span class="token punctuation">,</span> V2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deal</span><span class="token punctuation">(</span><span class="token function">desU</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> N<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">desS</span><span class="token punctuation">(</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">desV</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> N<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span>
<span class="line">    threshS2 <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>diagS2<span class="token operator">-</span>tau<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span>
<span class="line">    <span class="token function">X</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> U1<span class="token operator">*</span><span class="token function">diag</span><span class="token punctuation">(</span>diagS1<span class="token punctuation">)</span><span class="token operator">*</span>V1<span class="token operator">&#39;</span> <span class="token operator">+</span> U2<span class="token operator">*</span><span class="token function">diag</span><span class="token punctuation">(</span>threshS2<span class="token punctuation">)</span><span class="token operator">*</span>V2<span class="token operator">&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line">X <span class="token operator">=</span> <span class="token function">ifft</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">% 1范数的优化</span></span>
<span class="line"><span class="token keyword">function</span> x <span class="token operator">=</span> <span class="token function">prox_l1</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>lambda<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">x <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>b<span class="token operator">-</span>lambda<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>b<span class="token operator">+</span>lambda<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">x <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">% 合并面片为图像</span></span>
<span class="line"><span class="token keyword">function</span> recImg <span class="token operator">=</span> <span class="token function">res_patch_ten_mean</span><span class="token punctuation">(</span>patchTen<span class="token punctuation">,</span> img<span class="token punctuation">,</span> patchSize<span class="token punctuation">,</span> slideStep<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">% 2017-07-31</span></span>
<span class="line"><span class="token comment">% This matlab code implements the RIPT model for infrared target-background </span></span>
<span class="line"><span class="token comment">% separation.</span></span>
<span class="line">%</span>
<span class="line"><span class="token comment">% Yimian Dai. Questions? yimian.dai@gmail.com</span></span>
<span class="line"><span class="token comment">% Copyright: College of Electronic and Information Engineering, </span></span>
<span class="line"><span class="token comment">%            Nanjing University of Aeronautics and Astronautics</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span>imgHei<span class="token punctuation">,</span> imgWid<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">rowPatchNum <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">(</span>imgHei <span class="token operator">-</span> patchSize<span class="token punctuation">)</span> <span class="token operator">/</span> slideStep<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">colPatchNum <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">(</span>imgWid <span class="token operator">-</span> patchSize<span class="token punctuation">)</span> <span class="token operator">/</span> slideStep<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">rowPosArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">:</span> slideStep <span class="token operator">:</span> <span class="token punctuation">(</span>rowPatchNum <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> slideStep<span class="token punctuation">,</span> imgHei <span class="token operator">-</span> patchSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">colPosArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">:</span> slideStep <span class="token operator">:</span> <span class="token punctuation">(</span>colPatchNum <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> slideStep<span class="token punctuation">,</span> imgWid <span class="token operator">-</span> patchSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">%% for-loop version</span></span>
<span class="line">accImg <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>imgHei<span class="token punctuation">,</span> imgWid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">weiImg <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>imgHei<span class="token punctuation">,</span> imgWid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">onesMat <span class="token operator">=</span> <span class="token function">ones</span><span class="token punctuation">(</span>patchSize<span class="token punctuation">,</span> patchSize<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> col <span class="token operator">=</span> colPosArr</span>
<span class="line">    <span class="token keyword">for</span> row <span class="token operator">=</span> rowPosArr</span>
<span class="line">        k <span class="token operator">=</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">        tmpPatch <span class="token operator">=</span> <span class="token function">reshape</span><span class="token punctuation">(</span><span class="token function">patchTen</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> <span class="token operator">:</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>patchSize<span class="token punctuation">,</span> patchSize<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">accImg</span><span class="token punctuation">(</span>row <span class="token operator">:</span> row <span class="token operator">+</span> patchSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> col <span class="token operator">:</span> col <span class="token operator">+</span> patchSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> tmpPatch<span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">weiImg</span><span class="token punctuation">(</span>row <span class="token operator">:</span> row <span class="token operator">+</span> patchSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> col <span class="token operator">:</span> col <span class="token operator">+</span> patchSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> onesMat<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line">recImg <span class="token operator">=</span> accImg <span class="token operator">./</span> weiImg<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="根据matlab代码自己写的python代码" tabindex="-1"><a class="header-anchor" href="#根据matlab代码自己写的python代码"><span>根据matlab代码自己写的python代码</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"><span class="token keyword">import</span> cv2</span>
<span class="line"><span class="token keyword">import</span> math</span>
<span class="line"><span class="token keyword">import</span> scipy</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">init</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    pic <span class="token operator">=</span> plt<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>path<span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">131</span><span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Original&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> pic<span class="token punctuation">.</span>ndim <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span></span>
<span class="line">        plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>pic<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&#39;gray&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> pic<span class="token punctuation">.</span>ndim <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span></span>
<span class="line">        plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>pic<span class="token punctuation">)</span></span>
<span class="line">        pic <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>pic<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2GRAY<span class="token punctuation">)</span></span>
<span class="line">    pic <span class="token operator">=</span> np<span class="token punctuation">.</span>float64<span class="token punctuation">(</span>pic<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> pic</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">gen_patch</span><span class="token punctuation">(</span>pic<span class="token punctuation">,</span> patch_size<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span> slide_step<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    pic_H<span class="token punctuation">,</span> pic_W <span class="token operator">=</span> np<span class="token punctuation">.</span>shape<span class="token punctuation">(</span>pic<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    row_patch_num <span class="token operator">=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span><span class="token punctuation">(</span>pic_H <span class="token operator">-</span> patch_size<span class="token punctuation">)</span> <span class="token operator">/</span> slide_step <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    col_patch_num <span class="token operator">=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span><span class="token punctuation">(</span>pic_W <span class="token operator">-</span> patch_size<span class="token punctuation">)</span> <span class="token operator">/</span> slide_step <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    row_pos_arr <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> slide_step <span class="token operator">*</span> <span class="token punctuation">(</span>row_patch_num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> slide_step<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    row_pos_arr<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pic_H <span class="token operator">-</span> patch_size<span class="token punctuation">)</span></span>
<span class="line">    col_pos_arr <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> slide_step <span class="token operator">*</span> <span class="token punctuation">(</span>col_patch_num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> slide_step<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    col_pos_arr<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pic_W <span class="token operator">-</span> patch_size<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    Patch <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>patch_size<span class="token punctuation">,</span> patch_size<span class="token punctuation">,</span> row_patch_num <span class="token operator">*</span> col_patch_num<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    k <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token keyword">for</span> j <span class="token keyword">in</span> col_pos_arr<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">for</span> i <span class="token keyword">in</span> row_pos_arr<span class="token punctuation">:</span></span>
<span class="line">            patch_cell <span class="token operator">=</span> pic<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> patch_size<span class="token punctuation">,</span> j<span class="token punctuation">:</span>j <span class="token operator">+</span> patch_size<span class="token punctuation">]</span></span>
<span class="line">            Patch<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> k<span class="token punctuation">]</span> <span class="token operator">=</span> patch_cell</span>
<span class="line">            k <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> Patch</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">res_patch</span><span class="token punctuation">(</span>patch<span class="token punctuation">,</span> pic<span class="token punctuation">,</span> patch_size<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span> slide_step<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    pic_H<span class="token punctuation">,</span> pic_W <span class="token operator">=</span> np<span class="token punctuation">.</span>shape<span class="token punctuation">(</span>pic<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    row_patch_num <span class="token operator">=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span><span class="token punctuation">(</span>pic_H <span class="token operator">-</span> patch_size<span class="token punctuation">)</span> <span class="token operator">/</span> slide_step <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    col_patch_num <span class="token operator">=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span><span class="token punctuation">(</span>pic_W <span class="token operator">-</span> patch_size<span class="token punctuation">)</span> <span class="token operator">/</span> slide_step <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    row_pos_arr <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> slide_step <span class="token operator">*</span> <span class="token punctuation">(</span>row_patch_num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> slide_step<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    row_pos_arr<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pic_H <span class="token operator">-</span> patch_size<span class="token punctuation">)</span></span>
<span class="line">    col_pos_arr <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> slide_step <span class="token operator">*</span> <span class="token punctuation">(</span>col_patch_num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> slide_step<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    col_pos_arr<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pic_W <span class="token operator">-</span> patch_size<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    accImg <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>pic_H<span class="token punctuation">,</span> pic_W<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    weiImg <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>pic_H<span class="token punctuation">,</span> pic_W<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    onesMat <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span>patch_size<span class="token punctuation">,</span> patch_size<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    k <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token keyword">for</span> j <span class="token keyword">in</span> col_pos_arr<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">for</span> i <span class="token keyword">in</span> row_pos_arr<span class="token punctuation">:</span></span>
<span class="line">            tempPatch <span class="token operator">=</span> np<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>patch<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> k<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>patch_size<span class="token punctuation">,</span> patch_size<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            accImg<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span>patch_size<span class="token punctuation">,</span> j<span class="token punctuation">:</span>j<span class="token operator">+</span>patch_size<span class="token punctuation">]</span> <span class="token operator">=</span> tempPatch</span>
<span class="line">            weiImg<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span>patch_size<span class="token punctuation">,</span> j<span class="token punctuation">:</span>j<span class="token operator">+</span>patch_size<span class="token punctuation">]</span> <span class="token operator">=</span> onesMat</span>
<span class="line">            k <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> accImg <span class="token operator">/</span> weiImg</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">structure_tensor_lambda</span><span class="token punctuation">(</span>pic<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    Gaussian_kernel <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getGaussianKernel<span class="token punctuation">(</span>size<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> @ cv2<span class="token punctuation">.</span>getGaussianKernel<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>T</span>
<span class="line">    u <span class="token operator">=</span> scipy<span class="token punctuation">.</span>ndimage<span class="token punctuation">.</span>convolve<span class="token punctuation">(</span>pic<span class="token punctuation">,</span> Gaussian_kernel<span class="token punctuation">)</span>  </span>
<span class="line">    Gx<span class="token punctuation">,</span> Gy <span class="token operator">=</span> np<span class="token punctuation">.</span>gradient<span class="token punctuation">(</span>u<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    Gaussian_kernel <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getGaussianKernel<span class="token punctuation">(</span>size<span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span> @ cv2<span class="token punctuation">.</span>getGaussianKernel<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>T</span>
<span class="line">    J_11 <span class="token operator">=</span> scipy<span class="token punctuation">.</span>ndimage<span class="token punctuation">.</span>convolve<span class="token punctuation">(</span>Gx <span class="token operator">*</span> Gx<span class="token punctuation">,</span> Gaussian_kernel<span class="token punctuation">)</span></span>
<span class="line">    J_12 <span class="token operator">=</span> scipy<span class="token punctuation">.</span>ndimage<span class="token punctuation">.</span>convolve<span class="token punctuation">(</span>Gx <span class="token operator">*</span> Gy<span class="token punctuation">,</span> Gaussian_kernel<span class="token punctuation">)</span></span>
<span class="line">    J_21 <span class="token operator">=</span> J_12</span>
<span class="line">    J_22 <span class="token operator">=</span> scipy<span class="token punctuation">.</span>ndimage<span class="token punctuation">.</span>convolve<span class="token punctuation">(</span>Gy <span class="token operator">*</span> Gy<span class="token punctuation">,</span> Gaussian_kernel<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    sqrt_delta <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>J_11 <span class="token operator">-</span> J_22<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span>J_12 <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">    lambda1 <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>J_11 <span class="token operator">+</span> J_22 <span class="token operator">+</span> sqrt_delta<span class="token punctuation">)</span></span>
<span class="line">    lambda2 <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>J_11 <span class="token operator">+</span> J_22 <span class="token operator">-</span> sqrt_delta<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> lambda1<span class="token punctuation">,</span> lambda2</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">prox_pstnn</span><span class="token punctuation">(</span>Y<span class="token punctuation">,</span> N<span class="token punctuation">,</span> mu<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    dim <span class="token operator">=</span> Y<span class="token punctuation">.</span>shape</span>
<span class="line">    X <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>dim<span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">&#39;complex&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    Y <span class="token operator">=</span> np<span class="token punctuation">.</span>fft<span class="token punctuation">.</span>fft<span class="token punctuation">(</span>Y<span class="token punctuation">)</span></span>
<span class="line">    tau <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> mu</span>
<span class="line"></span>
<span class="line">    U<span class="token punctuation">,</span> diagS<span class="token punctuation">,</span> V <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>svd<span class="token punctuation">(</span>Y<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    des_S <span class="token operator">=</span> np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>diagS<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">    idx_S <span class="token operator">=</span> np<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>diagS<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">    des_U<span class="token punctuation">,</span> des_V <span class="token operator">=</span> U<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> idx_S<span class="token punctuation">]</span><span class="token punctuation">,</span> V<span class="token punctuation">.</span>T<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> idx_S<span class="token punctuation">]</span></span>
<span class="line">    U1<span class="token punctuation">,</span> diagS1<span class="token punctuation">,</span> V1 <span class="token operator">=</span> des_U<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">:</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> des_S<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> des_V<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">:</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">    U2<span class="token punctuation">,</span> diagS2<span class="token punctuation">,</span> V2 <span class="token operator">=</span> des_U<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> des_S<span class="token punctuation">[</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> des_V<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span></span>
<span class="line">    threshS2 <span class="token operator">=</span> np<span class="token punctuation">.</span>fmax<span class="token punctuation">(</span>diagS2 <span class="token operator">-</span> tau<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> U1 @ np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>diagS1<span class="token punctuation">)</span> @ V1<span class="token punctuation">.</span>T <span class="token operator">+</span> U2 @ np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>threshS2<span class="token punctuation">)</span> @ V2<span class="token punctuation">.</span>T</span>
<span class="line"></span>
<span class="line">    half_n3 <span class="token operator">=</span> <span class="token builtin">round</span><span class="token punctuation">(</span>dim<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> half_n3 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        U<span class="token punctuation">,</span> diagS<span class="token punctuation">,</span> V <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>svd<span class="token punctuation">(</span>Y<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">        des_S <span class="token operator">=</span> np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>diagS<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">        idx_S <span class="token operator">=</span> np<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>diagS<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">        des_U<span class="token punctuation">,</span> des_V <span class="token operator">=</span> U<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> idx_S<span class="token punctuation">]</span><span class="token punctuation">,</span> V<span class="token punctuation">.</span>T<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> idx_S<span class="token punctuation">]</span></span>
<span class="line">        U1<span class="token punctuation">,</span> diagS1<span class="token punctuation">,</span> V1 <span class="token operator">=</span> des_U<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">:</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> des_S<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> des_V<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">:</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">        U2<span class="token punctuation">,</span> diagS2<span class="token punctuation">,</span> V2 <span class="token operator">=</span> des_U<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> des_S<span class="token punctuation">[</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> des_V<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span></span>
<span class="line">        threshS2 <span class="token operator">=</span> np<span class="token punctuation">.</span>fmax<span class="token punctuation">(</span>diagS2 <span class="token operator">-</span> tau<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">        X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> U1 @ np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>diagS1<span class="token punctuation">)</span> @ V1<span class="token punctuation">.</span>T <span class="token operator">+</span> U2 @ np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>threshS2<span class="token punctuation">)</span> @ V2<span class="token punctuation">.</span>T</span>
<span class="line">        X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> dim<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>conj<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> dim<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">        i <span class="token operator">=</span> half_n3 <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line">        U<span class="token punctuation">,</span> diagS<span class="token punctuation">,</span> V <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>svd<span class="token punctuation">(</span>Y<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">        des_S <span class="token operator">=</span> np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>diagS<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">        idx_S <span class="token operator">=</span> np<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>diagS<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">        des_U<span class="token punctuation">,</span> des_V <span class="token operator">=</span> U<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> idx_S<span class="token punctuation">]</span><span class="token punctuation">,</span> V<span class="token punctuation">.</span>T<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> idx_S<span class="token punctuation">]</span></span>
<span class="line">        U1<span class="token punctuation">,</span> diagS1<span class="token punctuation">,</span> V1 <span class="token operator">=</span> des_U<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">:</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> des_S<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> des_V<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">:</span>N <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">        U2<span class="token punctuation">,</span> diagS2<span class="token punctuation">,</span> V2 <span class="token operator">=</span> des_U<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> des_S<span class="token punctuation">[</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> des_V<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span></span>
<span class="line">        threshS2 <span class="token operator">=</span> np<span class="token punctuation">.</span>fmax<span class="token punctuation">(</span>diagS2 <span class="token operator">-</span> tau<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">        X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> U1 @ np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>diagS1<span class="token punctuation">)</span> @ V1<span class="token punctuation">.</span>T <span class="token operator">+</span> U2 @ np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>threshS2<span class="token punctuation">)</span> @ V2<span class="token punctuation">.</span>T</span>
<span class="line"></span>
<span class="line">    X <span class="token operator">=</span> np<span class="token punctuation">.</span>fft<span class="token punctuation">.</span>ifft<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> X<span class="token punctuation">.</span>real</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">prox_l1</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> lambda_<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    x <span class="token operator">=</span> np<span class="token punctuation">.</span>fmax<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> b <span class="token operator">-</span> lambda_<span class="token punctuation">)</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>fmin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> b <span class="token operator">+</span> lambda_<span class="token punctuation">)</span></span>
<span class="line">    x <span class="token operator">=</span> np<span class="token punctuation">.</span>fmax<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> x</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">rankN</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> ration_n<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    num3 <span class="token operator">=</span> np<span class="token punctuation">.</span>shape<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line">    re_x <span class="token operator">=</span> x<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>num3<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> order<span class="token operator">=</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    S_diag <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>svd<span class="token punctuation">(</span>re_x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">    des_S <span class="token operator">=</span> np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>S_diag<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">    ratioVec <span class="token operator">=</span> des_S <span class="token operator">/</span> des_S<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">    idxArr <span class="token operator">=</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>ratioVec <span class="token operator">&lt;</span> ration_n<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">if</span> idxArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">        N <span class="token operator">=</span> idxArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        N <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> N</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">trpca_pstnn</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> lambda_<span class="token punctuation">,</span> tenW<span class="token punctuation">,</span> tol<span class="token operator">=</span><span class="token number">1e-3</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">,</span> rho<span class="token operator">=</span><span class="token number">1.05</span><span class="token punctuation">,</span> mu<span class="token operator">=</span><span class="token number">2e-3</span><span class="token punctuation">,</span> max_mu<span class="token operator">=</span><span class="token number">1e10</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line">    N <span class="token operator">=</span> rankN<span class="token punctuation">(</span>X<span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    dim <span class="token operator">=</span> np<span class="token punctuation">.</span>shape<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line">    L <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>dim<span class="token punctuation">)</span></span>
<span class="line">    S <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>dim<span class="token punctuation">)</span></span>
<span class="line">    Y <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>dim<span class="token punctuation">)</span></span>
<span class="line">    weightTen <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>dim<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">for</span> <span class="token builtin">iter</span> <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>max_iter<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        preT <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>S <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        R <span class="token operator">=</span> <span class="token operator">-</span>S <span class="token operator">+</span> X <span class="token operator">-</span> Y <span class="token operator">/</span> mu</span>
<span class="line">        L <span class="token operator">=</span> prox_pstnn<span class="token punctuation">(</span>R<span class="token punctuation">,</span> N<span class="token punctuation">,</span> mu<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        T <span class="token operator">=</span> <span class="token operator">-</span>L <span class="token operator">+</span> X <span class="token operator">-</span> Y <span class="token operator">/</span> mu</span>
<span class="line">        S <span class="token operator">=</span> prox_l1<span class="token punctuation">(</span>T<span class="token punctuation">,</span> weightTen <span class="token operator">*</span> lambda_ <span class="token operator">/</span> mu<span class="token punctuation">)</span></span>
<span class="line">        weightTen <span class="token operator">=</span> N<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0.01</span><span class="token punctuation">)</span> <span class="token operator">/</span> tenW</span>
<span class="line"></span>
<span class="line">        dY <span class="token operator">=</span> L <span class="token operator">+</span> S <span class="token operator">-</span> X</span>
<span class="line">        err <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>dY<span class="token punctuation">)</span> <span class="token operator">/</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line">        currT <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>S<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> debug<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;iter: %d , mu: %.4f, err: %.4f, |T|0: %d&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token builtin">iter</span><span class="token punctuation">,</span> mu<span class="token punctuation">,</span> err<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>currT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> err <span class="token operator">&lt;</span> tol <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">&lt;</span> preT <span class="token operator">==</span> currT <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line"></span>
<span class="line">        Y <span class="token operator">=</span> Y <span class="token operator">+</span> dY <span class="token operator">*</span> mu</span>
<span class="line">        mu <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>rho <span class="token operator">*</span> mu<span class="token punctuation">,</span> max_mu<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> L<span class="token punctuation">,</span> S</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">lambdaL <span class="token operator">=</span> <span class="token number">0.7</span></span>
<span class="line"></span>
<span class="line">img <span class="token operator">=</span> init<span class="token punctuation">(</span><span class="token string">&quot;./1.bmp&quot;</span><span class="token punctuation">)</span></span>
<span class="line">D <span class="token operator">=</span> gen_patch<span class="token punctuation">(</span>img<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> n3 <span class="token operator">=</span> D<span class="token punctuation">.</span>shape</span>
<span class="line"></span>
<span class="line">lambDa1<span class="token punctuation">,</span> lambDa2 <span class="token operator">=</span> structure_tensor_lambda<span class="token punctuation">(</span>img<span class="token punctuation">)</span></span>
<span class="line">cornerStrength <span class="token operator">=</span> <span class="token punctuation">(</span>lambDa1 <span class="token operator">*</span> lambDa2<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>lambDa1 <span class="token operator">+</span> lambDa2<span class="token punctuation">)</span></span>
<span class="line">maxValue <span class="token operator">=</span> np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span>lambDa1<span class="token punctuation">,</span> lambDa2<span class="token punctuation">)</span>  </span>
<span class="line">priorWeight <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>maxValue<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> np<span class="token punctuation">.</span>float64<span class="token punctuation">)</span></span>
<span class="line">cv2<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span>cornerStrength <span class="token operator">*</span> maxValue<span class="token punctuation">,</span> priorWeight<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>NORM_MINMAX<span class="token punctuation">,</span> dtype<span class="token operator">=</span>cv2<span class="token punctuation">.</span>CV_64F<span class="token punctuation">)</span>  </span>
<span class="line">W <span class="token operator">=</span> gen_patch<span class="token punctuation">(</span>priorWeight<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">lambda0 <span class="token operator">=</span> lambdaL <span class="token operator">/</span> math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span> <span class="token operator">*</span> n3<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">B<span class="token punctuation">,</span> T_ <span class="token operator">=</span> trpca_pstnn<span class="token punctuation">(</span>D<span class="token punctuation">,</span> lambda0<span class="token punctuation">,</span> W<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">tarImg <span class="token operator">=</span> res_patch<span class="token punctuation">(</span>T_<span class="token punctuation">,</span> img<span class="token punctuation">)</span></span>
<span class="line">backImg <span class="token operator">=</span> res_patch<span class="token punctuation">(</span>B<span class="token punctuation">,</span> img<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">maxV <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span></span>
<span class="line">E <span class="token operator">=</span> cv2<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span>tarImg<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>NORM_MINMAX<span class="token punctuation">,</span> dtype<span class="token operator">=</span>cv2<span class="token punctuation">.</span>CV_64F<span class="token punctuation">)</span><span class="token operator">*</span>maxV</span>
<span class="line">E <span class="token operator">=</span> E<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span></span>
<span class="line">A <span class="token operator">=</span> cv2<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span>backImg<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>NORM_MINMAX<span class="token punctuation">,</span> dtype<span class="token operator">=</span>cv2<span class="token punctuation">.</span>CV_64F<span class="token punctuation">)</span><span class="token operator">*</span>maxV</span>
<span class="line">A <span class="token operator">=</span> A<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">132</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>E<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&#39;gray&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;Target&quot;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">133</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>A<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&#39;gray&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;Background&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自己的疑问" tabindex="-1"><a class="header-anchor" href="#自己的疑问"><span>自己的疑问</span></a></h4><p>为什么平均对待奇异值会导致无法区分出背景与目标</p><p>为什么会这么计算先验权重图</p>`,29))])}const b=c(u,[["render",x]]),g=JSON.parse('{"path":"/blogs/Others/ReWIPI_NRAM.html","title":"基于最小秩估计的红外小目标检测","lang":"en-US","frontmatter":{"title":"基于最小秩估计的红外小目标检测","date":"2022-10-20T00:00:00.000Z","tags":["RemoteSensing"],"categories":["Search"]},"headers":[{"level":2,"title":"基于最小化联合l2,1范数的非凸秩估计的红外小目标检测","slug":"基于最小化联合l2-1范数的非凸秩估计的红外小目标检测","link":"#基于最小化联合l2-1范数的非凸秩估计的红外小目标检测","children":[{"level":3,"title":"IPI模型","slug":"ipi模型","link":"#ipi模型","children":[]},{"level":3,"title":"ReWIPI模型","slug":"rewipi模型","link":"#rewipi模型","children":[]},{"level":3,"title":"Robust PCA via Nonconvex Rank Approximation","slug":"robust-pca-via-nonconvex-rank-approximation","link":"#robust-pca-via-nonconvex-rank-approximation","children":[]},{"level":3,"title":"Infrared Small Target Detection via Non-Convex Rank Approximation Minimization Joint l2,1 Norm","slug":"infrared-small-target-detection-via-non-convex-rank-approximation-minimization-joint-l2-1-norm","link":"#infrared-small-target-detection-via-non-convex-rank-approximation-minimization-joint-l2-1-norm","children":[]}]}],"git":{"createdTime":1744420073000,"updatedTime":1744420073000,"contributors":[{"name":"NewLearner4396","email":"NewLearner4396@users.noreply.github.com","commits":1}]},"filePathRelative":"blogs/Others/ReWIPI_NRAM.md"}');export{b as comp,g as data};
