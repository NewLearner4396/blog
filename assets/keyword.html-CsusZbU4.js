import{_ as r,c as a,e as l,a as t,b as n,d as s,r as i,o as d}from"./app-BSRiWrsC.js";const p={},h={href:"https://blog.csdn.net/mieleizhi0522/article/details/82142856",target:"_blank",rel:"noopener noreferrer"};function y(c,e){const o=i("ExternalLinkIcon");return d(),a("div",null,[e[2]||(e[2]=l('<h2 id="python特殊方法学习笔记" tabindex="-1"><a class="header-anchor" href="#python特殊方法学习笔记"><span>Python特殊方法学习笔记</span></a></h2><h3 id="yield" tabindex="-1"><a class="header-anchor" href="#yield"><span>yield</span></a></h3><p>普通的return是什么意思，就是在程序中返回某个值，返回之后程序就不再往下运行了</p><p>带yield的函数是一个<strong>生成器</strong>，而不是一个函数了</p><p>对for循环：return会退出，yield会返回值并继续</p><p>生成器有一个函数就是next函数，next就相当于“下一步”生成哪个数，这一次的next开始的地方是接着上一次的next停止的地方执行的，所以调用next的时候，生成器并不会从foo函数的开始执行，只是接着上一步停止的地方开始，然后遇到yield后，return出要生成的数，此步就结束。</p><p>send发送一个参数给yield语句，以便继续执行下一步(send方法中包含next()方法)</p>',7)),t("p",null,[e[1]||(e[1]=n("参考链接：")),t("a",h,[e[0]||(e[0]=n("python中yield的用法详解——最简单，最清晰的解释")),s(o)])])])}const g=r(p,[["render",y]]),x=JSON.parse('{"path":"/blogs/Python/keyword.html","title":"Python特殊关键字","lang":"en-US","frontmatter":{"title":"Python特殊关键字","date":"2022-09-22T00:00:00.000Z","tags":["Python"],"categories":["Lang"]},"headers":[{"level":2,"title":"Python特殊方法学习笔记","slug":"python特殊方法学习笔记","link":"#python特殊方法学习笔记","children":[{"level":3,"title":"yield","slug":"yield","link":"#yield","children":[]}]}],"git":{"createdTime":1744420073000,"updatedTime":1744420073000,"contributors":[{"name":"NewLearner4396","email":"NewLearner4396@users.noreply.github.com","commits":1}]},"filePathRelative":"blogs/Python/keyword.md"}');export{g as comp,x as data};
