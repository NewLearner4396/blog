import{_ as p,c as o,e,a as s,b as a,d as l,r as i,o as c}from"./app-BSRiWrsC.js";const r={},m={href:"https://zhuanlan.zhihu.com/p/357695665",target:"_blank",rel:"noopener noreferrer"},u={href:"https://blog.csdn.net/qq_17119267/article/details/79108333",target:"_blank",rel:"noopener noreferrer"};function d(k,n){const t=i("ExternalLinkIcon");return c(),o("div",null,[n[2]||(n[2]=e(`<h2 id="statsmodels库" tabindex="-1"><a class="header-anchor" href="#statsmodels库"><span>statsmodels库</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="ols" tabindex="-1"><a class="header-anchor" href="#ols"><span>OLS</span></a></h3><p>一般来讲我们先构造一个OLS类，然后去拟合数据（调用fit（）方法），从而得到线性回归的结果。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">statsmodels</span><span class="token punctuation">.</span>regression<span class="token punctuation">.</span>linear_model<span class="token punctuation">.</span>OLS<span class="token punctuation">(</span>endog<span class="token punctuation">,</span> exog<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> missing<span class="token operator">=</span><span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span> hasconst<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输入有 (endog, exog, missing, hasconst) 四个，我们现在只考虑前两个。第一个输入 endog 是回归中的反应变量（也称因变量），是上面模型中的 y。第二个输入 exog 则是回归变量（也称自变量）的值，即模型中的x。</p>`,6)),n[3]||(n[3]=s("p",null,[a("这里有一个问题，statsmodels.OLS 不会假设回归模型有常数项，所以我们应该假设模型是 "),s("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[s("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[s("mjx-msub",null,[s("mjx-mi",{class:"mjx-i"},[s("mjx-c",{class:"mjx-c1D44C TEX-I"})]),s("mjx-script",{style:{"vertical-align":"-0.15em","margin-left":"-0.182em"}},[s("mjx-mi",{class:"mjx-i",size:"s"},[s("mjx-c",{class:"mjx-c1D456 TEX-I"})])])]),s("mjx-mo",{class:"mjx-n",space:"4"},[s("mjx-c",{class:"mjx-c3D"})]),s("mjx-mi",{class:"mjx-i",space:"4"},[s("mjx-c",{class:"mjx-c1D6FC TEX-I"})]),s("mjx-msub",null,[s("mjx-mi",{class:"mjx-i"},[s("mjx-c",{class:"mjx-c1D44B TEX-I"})]),s("mjx-script",{style:{"vertical-align":"-0.15em","margin-left":"-0.024em"}},[s("mjx-mn",{class:"mjx-n",size:"s"},[s("mjx-c",{class:"mjx-c30"})])])]),s("mjx-mo",{class:"mjx-n",space:"3"},[s("mjx-c",{class:"mjx-c2B"})]),s("mjx-mi",{class:"mjx-i",space:"3"},[s("mjx-c",{class:"mjx-c1D6FD TEX-I"})]),s("mjx-msub",null,[s("mjx-mi",{class:"mjx-i"},[s("mjx-c",{class:"mjx-c1D44B TEX-I"})]),s("mjx-script",{style:{"vertical-align":"-0.15em","margin-left":"-0.024em"}},[s("mjx-mi",{class:"mjx-i",size:"s"},[s("mjx-c",{class:"mjx-c1D456 TEX-I"})])])])]),s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msub",null,[s("mi",null,"Y"),s("mi",null,"i")]),s("mo",null,"="),s("mi",null,"α"),s("msub",null,[s("mi",null,"X"),s("mn",null,"0")]),s("mo",null,"+"),s("mi",null,"β"),s("msub",null,[s("mi",null,"X"),s("mi",null,"i")])])])]),a(" ，其中"),s("mjx-container",{class:"MathJax",jax:"CHTML",style:{"font-size":"110%",position:"relative"}},[s("mjx-math",{class:"MJX-TEX","aria-hidden":"true"},[s("mjx-msub",null,[s("mjx-mi",{class:"mjx-i"},[s("mjx-c",{class:"mjx-c1D44B TEX-I"})]),s("mjx-script",{style:{"vertical-align":"-0.15em","margin-left":"-0.024em"}},[s("mjx-mn",{class:"mjx-n",size:"s"},[s("mjx-c",{class:"mjx-c30"})])])])]),s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msub",null,[s("mi",null,"X"),s("mn",null,"0")])])])]),a("=1")],-1)),n[4]||(n[4]=e(`<p>Statmodels 有直接解决这个问题的函数：sm.add_constant()，它会在一个 array 左侧加上一列 1。</p><p>除了fit（）函数以外，如下表还有一些对拟合线性模型非常有用的其他函数</p><table><thead><tr><th>函数</th><th>用途</th></tr></thead><tbody><tr><td>params()</td><td>ang你ueli1里列出拟合函数的参数</td></tr><tr><td>conf_int()</td><td>提供模型参数的置信区间</td></tr><tr><td>fittedvalues</td><td>模型的拟合值</td></tr><tr><td>resid</td><td>模型的残差值</td></tr><tr><td>aic</td><td>赤池信息统计量</td></tr><tr><td>predict()</td><td>用拟合模型对新的数据集预测解释变量</td></tr></tbody></table><p>示例：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line">X <span class="token operator">=</span> sm<span class="token punctuation">.</span>add_constant<span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment"># 使用 sm.add_constant() 在 array 上加入一列常项1</span></span>
<span class="line">beta <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">e <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>size<span class="token operator">=</span>nsample<span class="token punctuation">)</span>  <span class="token comment"># 误差项</span></span>
<span class="line">y <span class="token operator">=</span> X @ beta <span class="token operator">+</span> e</span>
<span class="line">model <span class="token operator">=</span> sm<span class="token punctuation">.</span>OLS<span class="token punctuation">(</span>y<span class="token punctuation">,</span>X<span class="token punctuation">)</span></span>
<span class="line">results <span class="token operator">=</span> model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>results<span class="token punctuation">.</span>params<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>results<span class="token punctuation">.</span>summary<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">y_fitted <span class="token operator">=</span> results<span class="token punctuation">.</span>fittedvalues  <span class="token comment"># 调用拟合结果的 fittedvalues 得到拟合的y值</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token punctuation">[</span> <span class="token number">1.04510666</span><span class="token punctuation">,</span> <span class="token number">9.97239799</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://imagebed.krins.cloud/api/image/H6B26464.png" alt="OLS输出"></p><h4 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接"><span>参考链接：</span></a></h4>`,9)),s("p",null,[s("a",m,[n[0]||(n[0]=a("从零入门量化交易系列(九)用python做回归分析")),l(t)])]),s("p",null,[s("a",u,[n[1]||(n[1]=a("Statsmodels 统计包之 OLS 回归")),l(t)])])])}const h=p(r,[["render",d]]),j=JSON.parse('{"path":"/blogs/Python/statsmodels.html","title":"statsmodels库的学习笔记","lang":"en-US","frontmatter":{"title":"statsmodels库的学习笔记","date":"2022-10-08T00:00:00.000Z","tags":["Python"],"categories":["Lang"]},"headers":[{"level":2,"title":"statsmodels库","slug":"statsmodels库","link":"#statsmodels库","children":[{"level":3,"title":"OLS","slug":"ols","link":"#ols","children":[]}]}],"git":{"createdTime":1744420073000,"updatedTime":1744420073000,"contributors":[{"name":"NewLearner4396","email":"NewLearner4396@users.noreply.github.com","commits":1}]},"filePathRelative":"blogs/Python/statsmodels.md"}');export{h as comp,j as data};
