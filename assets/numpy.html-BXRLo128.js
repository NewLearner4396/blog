import{_ as i,c as r,e as l,a as p,b as a,d as e,r as o,o as s}from"./app-BSRiWrsC.js";const d={},h={href:"http://www.numpy.org/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/numpy/numpy",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.scipy.org/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/scipy/scipy",target:"_blank",rel:"noopener noreferrer"},c={href:"https://matplotlib.org/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/matplotlib/matplotlib",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.runoob.com/numpy/numpy-tutorial.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://numpy.org/doc/stable/user/index.html#user",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.bilibili.com/video/BV1YA411K7pp?p=4&vd_source=f7fc0a964268b45e70067d58c7c397fc",target:"_blank",rel:"noopener noreferrer"};function x(P,n){const t=o("ExternalLinkIcon");return s(),r("div",null,[n[15]||(n[15]=l('<h2 id="numpy库的使用" tabindex="-1"><a class="header-anchor" href="#numpy库的使用"><span>NumPy库的使用</span></a></h2><h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h3><p>NumPy(Numerical Python) 是 Python 语言的一个扩展程序库，支持大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。NumPy提供了一系列快速高效的方法来创建数组并操作数组中的数值数据。与数组可以在单个列表中包含不同的数据类型不同，NumPy数组中的所以元素都是同类型的。</p><h3 id="应用" tabindex="-1"><a class="header-anchor" href="#应用"><span>应用</span></a></h3><p>NumPy 通常与 SciPy（Scientific Python）和 Matplotlib（绘图库）一起使用， 这种组合广泛用于替代 MatLab，是一个强大的科学计算环境，有助于我们通过 Python 学习数据科学或者机器学习。</p><p>SciPy 是一个开源的 Python 算法库和数学工具包。</p><p>SciPy 包含的模块有最优化、线性代数、积分、插值、特殊函数、快速傅里叶变换、信号处理和图像处理、常微分方程求解和其他科学与工程中常用的计算。</p><p>Matplotlib 是 Python 编程语言及其数值数学扩展包 NumPy 的可视化操作界面。它为利用通用的图形用户界面工具包，如 Tkinter, wxPython, Qt 或 GTK+ 向应用程序嵌入式绘图提供了应用程序接口（API）。</p><h4 id="相关链接" tabindex="-1"><a class="header-anchor" href="#相关链接"><span>相关链接</span></a></h4>',9)),p("ul",null,[p("li",null,[n[1]||(n[1]=a("NumPy 官网： ")),p("a",h,[n[0]||(n[0]=a("http://www.numpy.org/")),e(t)])]),p("li",null,[n[3]||(n[3]=a("NumPy 源代码：")),p("a",m,[n[2]||(n[2]=a("https://github.com/numpy/numpy")),e(t)])]),p("li",null,[n[5]||(n[5]=a("SciPy 官网：")),p("a",u,[n[4]||(n[4]=a("https://www.scipy.org/")),e(t)])]),p("li",null,[n[7]||(n[7]=a("SciPy 源代码：")),p("a",y,[n[6]||(n[6]=a("https://github.com/scipy/scipy")),e(t)])]),p("li",null,[n[9]||(n[9]=a("Matplotlib 官网：")),p("a",c,[n[8]||(n[8]=a("https://matplotlib.org/")),e(t)])]),p("li",null,[n[11]||(n[11]=a("Matplotlib 源代码：")),p("a",b,[n[10]||(n[10]=a("https://github.com/matplotlib/matplotlib")),e(t)])])]),n[16]||(n[16]=l(`<h3 id="ndarray对象" tabindex="-1"><a class="header-anchor" href="#ndarray对象"><span>Ndarray对象</span></a></h3><p>NumPy 最重要的一个特点是其 N 维数组对象 ndarray，它是一系列同类型数据的集合，以 0 下标为开始进行集合中元素的索引。</p><p>ndarray 对象是用于存放同类型元素的多维数组。</p><p>ndarray 中的每个元素在内存中都有相同存储大小的区域。</p><p>ndarray 内部由以下内容组成：</p><ul><li>一个指向数据（内存或内存映射文件中的一块数据）的指针。</li><li>数据类型或 dtype，描述在数组中的固定大小值的格子。</li><li>一个表示数组形状（shape）的元组，表示各维度大小的元组。</li><li>一个跨度元组（stride），其中的整数指的是为了前进到当前维度下一个元素需要&quot;跨过&quot;的字节数。</li></ul><p>ndarray 的内部结构:</p><p><img src="http://imagebed.krins.cloud/api/image/BT6NTH8P.png" alt="nadrray"></p><p>创建ndarray对象：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">numpy<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span> copy <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span> subok <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span> ndmin <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>参数说明：</p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>object</td><td>数组或嵌套的数列</td></tr><tr><td>dtype</td><td>数组语速的数据类型，可选</td></tr><tr><td>copy</td><td>对象是否需要复制，可选</td></tr><tr><td>order</td><td>创建数组的样式，C为行方向，F为列方向，A为任意方向（默认）</td></tr><tr><td>subok</td><td>默认返回一个与基类类型一致的数组</td></tr><tr><td>ndmin</td><td>指定生成数组的最小维度</td></tr></tbody></table><p>dtype 为数组元素的数据类型（默认为int32）</p><p>常用的有： 1. float(float32、float64) 2. int(int8、int16、int32)、uint 3. complex</p><p>数据类型转换：</p><ol><li>np.dtype(obj)</li><li>obj.astype(np.dtype)</li></ol><h3 id="常用函数" tabindex="-1"><a class="header-anchor" href="#常用函数"><span>常用函数</span></a></h3><ol><li><h4 id="矩阵创建" tabindex="-1"><a class="header-anchor" href="#矩阵创建"><span>矩阵创建</span></a></h4><ol><li><p>np.array([1,2,3])</p><p>创建1维行向量</p></li><li><p>np.uint8([1,2,3])</p><p>创建1维行向量，但数据类型是八位无符号数</p></li><li><p>np.arange(start，stop，[step])</p><p>左闭右开，步进可以为小数</p></li><li><p>np.linspace(start,stop,num)</p><p>左闭右闭，num设置生成多少个元素</p></li><li><p>np.zeros(dim/(m,n))</p><p>n维或n行m列0矩阵</p></li><li><p>np.ones(dim/(m,n))</p><p>n维或n行m列1矩阵</p></li><li><p>np.eye(n,[m,k,dtype,order])</p><p>n行m列单位阵，k为对脚线平移列数（正数左移），order为数组输出形式（默认为行优先）</p></li><li><p>np.identity(n,[dtype])</p><p>创建n维单位方阵</p></li><li><p>np.random</p><ol><li><p>np.random.rand(m,n)</p><p>生成指定维度的的**[0,1)范围**之间的随机数</p></li><li><p>np.random.randn(m,n)</p><p>生成指定维度的的**[0,1)范围**之间服从正态分布的随机数</p></li><li><p>np.random.randint(low,high,(m,n),[dtype])</p><p>生成指定维度的的**[low,high)范围**之间服从正态分布的随机数</p></li><li><p>np.random.random_integers(low,high,(m,n))</p><p>生成指定维度的的**[low,high]范围**之间服从正态分布的随机数</p></li><li><p>np.random.choice(a, size = None, replace = True, p = None)</p><p>从给定数组a中随机选择,p可以指定a中每个元素被选择的概率，p的size应与a一致，replace=True则返回的数可以有重复的</p></li><li><p>np.random.seed()</p><p>设置随机数种子</p></li></ol></li></ol></li><li><h4 id="矩阵转换" tabindex="-1"><a class="header-anchor" href="#矩阵转换"><span>矩阵转换</span></a></h4><ol><li><p>a.reshape(m,n)/np.reshape(a,（m,n）,order)</p><p>新的尺寸不能使元素数量改变，m为-1时，系统会根据n自动计算m应为多少</p></li><li><p>a.flatten()</p><p>将数组一行行的移到数组末尾变为1维</p></li><li><p>a.ravel()</p><p>功能与flatten一样，但返回的是a矩阵的变形，没有生成一个新矩阵，与a会相互影响</p></li><li><p>a.T/a.transpose</p><p>矩阵转置</p></li><li><p>np.hstack([A,B])</p><p>将A,B两矩阵水平并在一起</p></li><li><p>np.vstack([A,B])</p><p>将A,B两矩阵竖直并在一起</p></li></ol></li><li><h4 id="矩阵统计值" tabindex="-1"><a class="header-anchor" href="#矩阵统计值"><span>矩阵统计值</span></a></h4><ol><li><p>a.max() 最大值</p><p>a.argmax()获得最大值索引</p><p>np.maximum(a, b) 返回a， b两矩阵对应元素最大值 np.fmax(a, b) 返回两向量对应元素最大值</p></li><li><p>a.min() 最小值</p></li><li><p>a.mean() 平均值</p><p>可设置参数axis，=0,则按列返回，=1则按行返回</p></li></ol></li><li><h4 id="数学运算" tabindex="-1"><a class="header-anchor" href="#数学运算"><span>数学运算</span></a></h4><ol><li><p>np.power(A,2) 幂函数，A的每个元素平方</p></li><li><p>np.sqrt() 开根号</p></li><li><p>np.log() 以e为底</p></li><li><p>np.log2() 以2为底</p></li><li><p>np.log10() 以10为底</p></li><li><p>A.dot(B)/ A @ B A,B两矩阵相乘，A*B为对应数字相乘</p></li><li><p>np.linalg.inv(A) 求A矩阵的逆</p><p>np.linalg.pinv() 求广义逆</p><p>函数返回一个与A的转置矩阵A&#39; 同型的矩阵X，并且满足：AXA=A,XAX=X.此时，称矩阵X为矩阵A的伪逆，也称为广义逆矩阵。</p></li></ol></li><li><h4 id="序列" tabindex="-1"><a class="header-anchor" href="#序列"><span>序列</span></a></h4><p>A[m:,n:]从第m行n列切到末尾</p><p>np.where(condition) 查找满足条件的元素的索引，参考matlab的find</p></li><li><h4 id="设域" tabindex="-1"><a class="header-anchor" href="#设域"><span>设域</span></a></h4><p>np.clip(a,min,max)</p><p>a中元素小于min的设为min，大于max的设为max</p></li><li><h4 id="图像相关" tabindex="-1"><a class="header-anchor" href="#图像相关"><span>图像相关</span></a></h4><ol><li><p>np.pad(array, ((before_1, after_1), (before_N, after_N)), mode=‘constant’,contant_values=(x, y))</p><p>边缘填充，用x前向填充，y后向填充</p></li></ol></li></ol><h3 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h3>`,19)),p("ol",null,[p("li",null,[p("a",g,[n[12]||(n[12]=a("菜鸟教程-NumPy教程")),e(t)])]),p("li",null,[p("a",f,[n[13]||(n[13]=a("NumPy用户指南")),e(t)])]),p("li",null,[p("a",k,[n[14]||(n[14]=a("极棒的数字图像处理入门到进阶教程：Python OpenCV实战数图")),e(t)])])])])}const w=i(d,[["render",x]]),A=JSON.parse('{"path":"/blogs/Python/numpy.html","title":"NumPy库的学习笔记","lang":"en-US","frontmatter":{"title":"NumPy库的学习笔记","date":"2022-09-01T00:00:00.000Z","tags":["Python"],"categories":["Lang"]},"headers":[{"level":2,"title":"NumPy库的使用","slug":"numpy库的使用","link":"#numpy库的使用","children":[{"level":3,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":3,"title":"应用","slug":"应用","link":"#应用","children":[]},{"level":3,"title":"Ndarray对象","slug":"ndarray对象","link":"#ndarray对象","children":[]},{"level":3,"title":"常用函数","slug":"常用函数","link":"#常用函数","children":[]},{"level":3,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}]}],"git":{"createdTime":1744420073000,"updatedTime":1744420073000,"contributors":[{"name":"NewLearner4396","email":"NewLearner4396@users.noreply.github.com","commits":1}]},"filePathRelative":"blogs/Python/numpy.md"}');export{w as comp,A as data};
