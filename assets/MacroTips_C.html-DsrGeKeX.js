import{_ as n,c as a,e as p,o as e}from"./app-BSRiWrsC.js";const t={};function c(o,s){return e(),a("div",null,s[0]||(s[0]=[p(`<h2 id="你不知道的宏函数使用技巧" tabindex="-1"><a class="header-anchor" href="#你不知道的宏函数使用技巧"><span>你不知道的宏函数使用技巧</span></a></h2><h3 id="_1-单行宏函数" tabindex="-1"><a class="header-anchor" href="#_1-单行宏函数"><span>1. 单行宏函数</span></a></h3><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">add</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span></span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>用于简单的表达式替换。</li><li>注意括号的使用，避免运算优先级问题。</li></ul><hr><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_DELAY_NS</span><span class="token expression"><span class="token punctuation">(</span>ns<span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_DELAY_US</span><span class="token expression"><span class="token punctuation">(</span>us<span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">ARW_DELAY_NS</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">error</span> <span class="token string">&quot;请提供延迟函数&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>提供函数接口。</li><li>用户需根据具体平台实现这些宏。</li><li>预处理时遇到<code>#error</code>命令会立刻停止编译并输出指定信息然后返回错误退出代码并报告包含错误信息的文件名和行号</li></ul><h3 id="_2-多行宏函数" tabindex="-1"><a class="header-anchor" href="#_2-多行宏函数"><span>2. 多行宏函数</span></a></h3><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">MULTILINE_MACRO</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span></span>
<span class="line">    <span class="token expression"><span class="token keyword">do</span> <span class="token punctuation">{</span>                      </span><span class="token punctuation">\\</span></span>
<span class="line">        <span class="token expression">a <span class="token operator">+=</span> b<span class="token punctuation">;</span>               </span><span class="token punctuation">\\</span></span>
<span class="line">        <span class="token expression">b <span class="token operator">*=</span> <span class="token number">2</span><span class="token punctuation">;</span>               </span><span class="token punctuation">\\</span></span>
<span class="line">    <span class="token expression"><span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>\\</code>：告诉预处理器下一行是当前行的延续，反斜杠后不要有任何字符（包括空格）。</li><li>末尾没有<code>;</code>，最后一行没有<code>\\</code>。</li><li>使用 <code>do { ... } while (0)</code> 包裹，确保宏在任何上下文中都能安全使用。</li><li>避免在<code>if-else</code>语句中作为带有结束符号的代码块，导致错误的分支解析。</li><li>避免潜在的语法错误。</li></ul><h3 id="_3-条件编译宏" tabindex="-1"><a class="header-anchor" href="#_3-条件编译宏"><span>3. 条件编译宏</span></a></h3><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">__has_include</span><span class="token punctuation">(</span></span><span class="token string">&quot;FreeRTOS.h&quot;</span><span class="token expression"><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_ENTER_CRITICAL</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">)</span>  </span><span class="token punctuation">\\</span></span>
<span class="line">    <span class="token expression"><span class="token keyword">do</span> <span class="token punctuation">{</span>                      </span><span class="token punctuation">\\</span></span>
<span class="line">        <span class="token expression"><span class="token function">taskENTER_CRITICAL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span></span>
<span class="line">        <span class="token expression"><span class="token function">__disable_irq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      </span><span class="token punctuation">\\</span></span>
<span class="line">    <span class="token expression"><span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_EXIT_CRITICAL</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">)</span>  </span><span class="token punctuation">\\</span></span>
<span class="line">    <span class="token expression"><span class="token keyword">do</span> <span class="token punctuation">{</span>                     </span><span class="token punctuation">\\</span></span>
<span class="line">        <span class="token expression"><span class="token function">taskEXIT_CRITICAL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span></span>
<span class="line">        <span class="token expression"><span class="token function">__enable_irq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      </span><span class="token punctuation">\\</span></span>
<span class="line">    <span class="token expression"><span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_ENTER_CRITICAL</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">__disable_irq</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_EXIT_CRITICAL</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">__enable_irq</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>根据条件选择不同的实现。</li><li>常用于兼容不同平台或功能模块。</li></ul><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token comment">/* 定义日志级别 */</span></span>
<span class="line"><span class="token comment">/* 日志级别定义 */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ARW_LOG_LEVEL_NONE</span>    <span class="token expression"><span class="token number">0</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ARW_LOG_LEVEL_ERROR</span>   <span class="token expression"><span class="token number">1</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ARW_LOG_LEVEL_WARNING</span> <span class="token expression"><span class="token number">2</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ARW_LOG_LEVEL_INFO</span>    <span class="token expression"><span class="token number">3</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ARW_LOG_LEVEL_DEBUG</span>   <span class="token expression"><span class="token number">4</span></span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/* 设置当前日志级别 */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">ARW_CURRENT_LOG_LEVEL</span></span></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ARW_CURRENT_LOG_LEVEL</span> <span class="token expression">ARW_LOG_LEVEL_ERROR</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/* 日志颜色（用于支持彩色输出的终端） */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ARW_LOG_COLOR_RED</span>     <span class="token string">&quot;\\033[1;31m&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ARW_LOG_COLOR_YELLOW</span>  <span class="token string">&quot;\\033[1;33m&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ARW_LOG_COLOR_GREEN</span>   <span class="token string">&quot;\\033[1;32m&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ARW_LOG_COLOR_BLUE</span>    <span class="token string">&quot;\\033[1;34m&quot;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ARW_LOG_COLOR_RESET</span>   <span class="token string">&quot;\\033[0m&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/* 日志宏定义 */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">ARW_CURRENT_LOG_LEVEL <span class="token operator">&gt;=</span> ARW_LOG_LEVEL_ERROR</span></span></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_LOG_ERROR</span><span class="token expression"><span class="token punctuation">(</span>fmt<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> </span><span class="token punctuation">\\</span></span>
<span class="line">        <span class="token expression"><span class="token function">ARW_PRINTF</span><span class="token punctuation">(</span>ARW_LOG_COLOR_RED </span><span class="token string">&quot;[ERROR] %s:%d: &quot;</span> <span class="token expression">fmt ARW_LOG_COLOR_RESET </span><span class="token string">&quot;\\n&quot;</span><span class="token expression"><span class="token punctuation">,</span> </span><span class="token punctuation">\\</span></span>
<span class="line">                  <span class="token expression"><span class="token constant">__FILE__</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> </span><span class="token punctuation">##</span><span class="token expression">__VA_ARGS__<span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_LOG_ERROR</span><span class="token expression"><span class="token punctuation">(</span>fmt<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token number">0</span><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">ARW_CURRENT_LOG_LEVEL <span class="token operator">&gt;=</span> ARW_LOG_LEVEL_WARNING</span></span></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_LOG_WARNING</span><span class="token expression"><span class="token punctuation">(</span>fmt<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> </span><span class="token punctuation">\\</span></span>
<span class="line">        <span class="token expression"><span class="token function">ARW_PRINTF</span><span class="token punctuation">(</span>ARW_LOG_COLOR_YELLOW </span><span class="token string">&quot;[WARN] %s:%d: &quot;</span> <span class="token expression">fmt ARW_LOG_COLOR_RESET </span><span class="token string">&quot;\\n&quot;</span><span class="token expression"><span class="token punctuation">,</span> </span><span class="token punctuation">\\</span></span>
<span class="line">                  <span class="token expression"><span class="token constant">__FILE__</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> </span><span class="token punctuation">##</span><span class="token expression">__VA_ARGS__<span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_LOG_WARNING</span><span class="token expression"><span class="token punctuation">(</span>fmt<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token number">0</span><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">ARW_CURRENT_LOG_LEVEL <span class="token operator">&gt;=</span> ARW_LOG_LEVEL_INFO</span></span></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_LOG_INFO</span><span class="token expression"><span class="token punctuation">(</span>fmt<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> </span><span class="token punctuation">\\</span></span>
<span class="line">        <span class="token expression"><span class="token function">ARW_PRINTF</span><span class="token punctuation">(</span>ARW_LOG_COLOR_GREEN </span><span class="token string">&quot;[INFO] &quot;</span> <span class="token expression">fmt ARW_LOG_COLOR_RESET </span><span class="token string">&quot;\\n&quot;</span><span class="token expression"><span class="token punctuation">,</span> </span><span class="token punctuation">\\</span></span>
<span class="line">                  <span class="token punctuation">##</span><span class="token expression">__VA_ARGS__<span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_LOG_INFO</span><span class="token expression"><span class="token punctuation">(</span>fmt<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token number">0</span><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">ARW_CURRENT_LOG_LEVEL <span class="token operator">&gt;=</span> ARW_LOG_LEVEL_DEBUG</span></span></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_LOG_DEBUG</span><span class="token expression"><span class="token punctuation">(</span>fmt<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> </span><span class="token punctuation">\\</span></span>
<span class="line">        <span class="token expression"><span class="token function">ARW_PRINTF</span><span class="token punctuation">(</span>ARW_LOG_COLOR_BLUE </span><span class="token string">&quot;[DEBUG] %s:%d: &quot;</span> <span class="token expression">fmt ARW_LOG_COLOR_RESET </span><span class="token string">&quot;\\n&quot;</span><span class="token expression"><span class="token punctuation">,</span> </span><span class="token punctuation">\\</span></span>
<span class="line">                  <span class="token expression"><span class="token constant">__FILE__</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> </span><span class="token punctuation">##</span><span class="token expression">__VA_ARGS__<span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_LOG_DEBUG</span><span class="token expression"><span class="token punctuation">(</span>fmt<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token number">0</span><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>文件名和行号信息</li><li>彩色输出（在支持的终端）</li><li>标准化的日志格式</li><li>统一的使用方式</li></ul><h3 id="_4-动态拼接宏" tabindex="-1"><a class="header-anchor" href="#_4-动态拼接宏"><span>4. 动态拼接宏</span></a></h3><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_WRITE_PIN</span><span class="token expression"><span class="token punctuation">(</span>pin_name<span class="token punctuation">,</span> state<span class="token punctuation">)</span>                                                           </span><span class="token punctuation">\\</span></span>
<span class="line">    <span class="token expression"><span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span>this<span class="token operator">-&gt;</span>hardware<span class="token punctuation">.</span>pin_name</span><span class="token punctuation">##</span><span class="token expression">_pin<span class="token punctuation">.</span>port_ptr<span class="token punctuation">,</span> this<span class="token operator">-&gt;</span>hardware<span class="token punctuation">.</span>pin_name</span><span class="token punctuation">##</span><span class="token expression">_pin<span class="token punctuation">.</span>pin<span class="token punctuation">,</span> </span><span class="token punctuation">\\</span></span>
<span class="line">                      <span class="token expression">state <span class="token operator">?</span> GPIO_PIN_SET <span class="token operator">:</span> GPIO_PIN_RESET<span class="token punctuation">)</span></span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用 <code>##</code> 拼接符动态生成变量名。</li><li>提高代码的灵活性。</li></ul><hr><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">ARW_PRINTF</span><span class="token expression"><span class="token punctuation">(</span>fmt<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">printf</span><span class="token punctuation">(</span>fmt<span class="token punctuation">,</span> </span><span class="token punctuation">##</span><span class="token expression">__VA_ARGS__<span class="token punctuation">)</span></span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>##的特殊用法：当该参数为空时把前面的逗号删除，避免造成错误的函数调用</li></ul><hr><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">X_ARW_ERROR_LIST</span>                      <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token expression"><span class="token function">X_ARW_ERROR</span><span class="token punctuation">(</span>Ok<span class="token punctuation">,</span> Success<span class="token punctuation">)</span>                  </span><span class="token punctuation">\\</span></span>
<span class="line">    <span class="token expression"><span class="token function">X_ARW_ERROR</span><span class="token punctuation">(</span>ErrNullPtr<span class="token punctuation">,</span> Null pointer<span class="token punctuation">)</span>     </span><span class="token punctuation">\\</span></span>
<span class="line">    <span class="token expression"><span class="token function">X_ARW_ERROR</span><span class="token punctuation">(</span>ErrSendMode<span class="token punctuation">,</span> Sendmode error<span class="token punctuation">)</span>  </span><span class="token punctuation">\\</span></span>
<span class="line">    <span class="token expression"><span class="token function">X_ARW_ERROR</span><span class="token punctuation">(</span>ErrDataSize<span class="token punctuation">,</span> Data size error<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span></span>
<span class="line">    <span class="token expression"><span class="token function">X_ARW_ERROR</span><span class="token punctuation">(</span>ErrChipMode<span class="token punctuation">,</span> Chip mode error<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span></span>
<span class="line">    <span class="token expression"><span class="token function">X_ARW_ERROR</span><span class="token punctuation">(</span>ErrSpiData<span class="token punctuation">,</span> Spi data error<span class="token punctuation">)</span></span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">X_ARW_ERROR</span><span class="token expression"><span class="token punctuation">(</span>code<span class="token punctuation">,</span> msg<span class="token punctuation">)</span> kArw</span><span class="token punctuation">##</span><span class="token expression">code<span class="token punctuation">,</span></span></span></span>
<span class="line"><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token class-name">ArwErr</span> <span class="token punctuation">{</span> X_ARW_ERROR_LIST <span class="token punctuation">}</span> ArwErr_t<span class="token punctuation">;</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">undef</span> <span class="token expression">X_ARW_ERROR</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">X_ARW_ERROR</span><span class="token expression"><span class="token punctuation">(</span>code<span class="token punctuation">,</span> msg<span class="token punctuation">)</span> #msg<span class="token punctuation">,</span></span></span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> err_msg<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>X_ARW_ERROR_LIST<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">undef</span> <span class="token expression">X_ARW_ERROR</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用 <code>X_MACRO</code> 技术生成枚举值和对应的错误信息。</li><li>便于维护和扩展。</li></ul><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><ul><li>宏函数是 C 语言中强大的工具，能够提高代码的复用性和灵活性。</li><li>在使用宏函数时，应注意其作用范围、潜在副作用以及调试难度。</li></ul>`,26)]))}const l=n(t,[["render",c]]),r=JSON.parse('{"path":"/blogs/STM32/MacroTips_C.html","title":"C语言宏函数的一些使用技巧","lang":"en-US","frontmatter":{"title":"C语言宏函数的一些使用技巧","date":"2025-04-02T00:00:00.000Z","tags":["MACRO","嵌入式"],"categories":["C"]},"headers":[{"level":2,"title":"你不知道的宏函数使用技巧","slug":"你不知道的宏函数使用技巧","link":"#你不知道的宏函数使用技巧","children":[{"level":3,"title":"1. 单行宏函数","slug":"_1-单行宏函数","link":"#_1-单行宏函数","children":[]},{"level":3,"title":"2. 多行宏函数","slug":"_2-多行宏函数","link":"#_2-多行宏函数","children":[]},{"level":3,"title":"3. 条件编译宏","slug":"_3-条件编译宏","link":"#_3-条件编译宏","children":[]},{"level":3,"title":"4. 动态拼接宏","slug":"_4-动态拼接宏","link":"#_4-动态拼接宏","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]}],"git":{"createdTime":1744420073000,"updatedTime":1744420073000,"contributors":[{"name":"NewLearner4396","email":"NewLearner4396@users.noreply.github.com","commits":1}]},"filePathRelative":"blogs/STM32/MacroTips_C.md"}');export{l as comp,r as data};
